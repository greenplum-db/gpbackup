# USAGE: fly -t dp set-pipeline  -p scale_test_refactor -c ~/workspace/gpbackup/ci/scale/scale_pipeline.yml -v gpbackup-git-branch=BRANCH_NAME
---
groups:
- name: scale
  jobs:
  - load-data-gpdb6
  - scale-perf-tests-gpdb6

resource_types:
- name: terraform
  type: registry-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 0.11.14

- name: slack-notification
  type: registry-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: gcs
  type: registry-image
  source:
    repository: frodenas/gcs-resource

- name: pivnet
  type: registry-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

## ======================================================================
##  _ __ ___  ___  ___  _   _ _ __ ___ ___  ___
## | '__/ _ \/ __|/ _ \| | | | '__/ __/ _ \/ __|
## | | |  __/\__ \ (_) | |_| | | | (_|  __/\__ \
## |_|  \___||___/\___/ \__,_|_|  \___\___||___/
## ======================================================================

resources:
##### Docker Images #####
- name: rocky8-gpdb6-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb6-rocky8-test
    tag: latest

##### Source Code ####
- name: gpbackup
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpbackup
    branch: ((gpbackup-git-branch))

- name: gpdb6_src
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpdb
    branch: 6X_STABLE

- name: ccp_src
  type: git
  icon: github-circle
  source:
    branch: ((dp/ccp-git-branch))
    private_key: ((gp-concourse-cluster-provisioner-git-key))
    uri: ((dp/ccp-git-remote))

#### Binaries ####
- name: bin_gpdb_6x_rhel8
  type: gcs
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/gpdb6/server-rc-(.*)-rhel8_x86_64.tar.gz

#### Misc Other ####
- name: weekly-trigger
  type: time
  source:
    location: America/Los_Angeles
    interval: 168h # 7 days 

- name: terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      GOOGLE_CREDENTIALS: ((dp/dev/google-service-account-key))
    vars:
      project_id: ((dp/dev/google-project-id))
    storage:
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))
      region_name: ((dp/aws-region))
      bucket: ((dp/tf-bucket-name))
      bucket_path: clusters-google/

- name: slack-alert
  type: slack-notification
  source:
    url: ((dp/webhook_url))
    disable: false

- name: gppkgs
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    versioned_file: gpbackup/intermediates/gpbackup-gppkgs.tar.gz

- name: cluster-metadata
  type: gcs
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    versioned_file: gpbackup/intermediates/cluster-metadata.tar.gz

- name: terraform.d
  type: s3
  icon: amazon
  source:
    access_key_id: ((aws-bucket-access-key-id))
    bucket: ccp-terraform-provider-plugins
    region_name: ((dp/aws-region))
    secret_access_key: ((aws-bucket-secret-access-key))
    versioned_file: plugin-cache-all.tgz

## ======================================================================
##                   _
##   __ _ _ __   ___| |__   ___  _ __ ___
##  / _` | '_ \ / __| '_ \ / _ \| '__/ __|
## | (_| | | | | (__| | | | (_) | |  \__ \
##  \__,_|_| |_|\___|_| |_|\___/|_|  |___/
## ======================================================================

anchors:
- &ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  plugin_dir: ../../terraform.d/plugin-cache/linux_amd64
  terraform_source: ccp_src/google/

- &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
  AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
  AWS_DEFAULT_REGION: ((dp/aws-region))
  BUCKET_PATH: clusters-google/
  BUCKET_NAME: ((dp/tf-bucket-name))
  CLOUD_PROVIDER: google

- &destroy_params
  action: destroy
  plugin_dir: ../../terraform.d/plugin-cache/linux_amd64
  terraform_source: ccp_src/google/
  env_name_file: terraform/name
  vars:
    aws_instance-node-instance_type: t2.micro #t2.micro is ignored in destroy, but aws_instance-node-instance_type is required.
    aws_ebs_volume_type: standard

- &ccp_destroy
  put: terraform
  params:
    <<: *destroy_params
  get_params:
    action: destroy

- &ccp_destroy_nvme
  put: terraform
  params:
    <<: *destroy_params
    terraform_source: ccp_src/google-nvme-block-device/
  get_params:
    action: destroy

- &set_failed
  do:
    - task: on_failure_set_failed
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: gcr.io/data-gpdb-public-images/ccp
            tag: "latest"
        inputs:
          - name: ccp_src
          - name: terraform
        run:
          path: 'ccp_src/google/ccp_failed_test.sh'
        params:
          GOOGLE_CREDENTIALS: ((dp/dev/google-service-account-key))
          GOOGLE_PROJECT_ID: ((dp/dev/google-service-account))
          GOOGLE_ZONE: ((dp/dev/google-zone))
          GOOGLE_SERVICE_ACCOUNT: ((dp/dev/google-service-account))
          AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
          AWS_DEFAULT_REGION: ((dp/tf-machine-region))
          BUCKET_PATH: clusters-google/
          BUCKET_NAME: ((dp/tf-bucket-name))

- &terraform_cluster
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      GOOGLE_CREDENTIALS: ((dp/dev/google-service-account-key))
    vars:
      project_id: ((dp/dev/google-service-account))
    storage:
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))
      region_name: ((dp/aws-region))
      # This is not parameterized, on purpose. All tfstates will go to this spot,
      # and different teams will place there clusters' tfstate files under different paths
      bucket: gpdb5-pipeline-dynamic-terraform
      bucket_path: clusters-google/


- &slack_alert
  put: slack-alert
  params:
    text: |
      [gpbackup/$BUILD_JOB_NAME] failed:
      https://dp.ci.gpdb.pivotal.io/teams/main/pipelines/scale_test_refactor/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

## ======================================================================
##    _       _
##   (_) ___ | |__  ___
##   | |/ _ \| '_ \/ __|
##   | | (_) | |_) \__ \
##  _/ |\___/|_.__/|___/
## |__/
## ======================================================================

jobs:
- name: load-data-gpdb6
  plan:
  - in_parallel:
    - get: weekly-trigger
      trigger: true
    - get: rocky8-gpdb6-image
    - get: gpbackup
    - get: gpdb_binary
      resource: bin_gpdb_6x_rhel8
    - get: gpdb_src
      resource: gpdb6_src
    - get: gppkgs
    - get: ccp_src
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        PLATFORM: rocky8
        instance_type: n2-standard-8
        disk_size: 1000
        number_of_nodes: 4
        segments_per_host: 4
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: rocky8
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-cluster-env
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/setup-cluster-env.yml
  - task: scale-perf-load
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/scale-perf-load.yml
    params:
      GOOGLE_CREDENTIALS: ((dp/dev/google-service-account-key))
    on_failure:
      *slack_alert
  - put: cluster-metadata
    params:
      file: cluster-metadata/cluster-metadata.tar.gz

- name: scale-perf-tests-gpdb6
  plan:
  - in_parallel:
    - get: cluster-metadata
      passed: ['load-data-gpdb6']
      trigger: true
    - get: rocky8-gpdb6-image
    - get: gpbackup
    - get: gpdb_binary
      resource: bin_gpdb_6x_rhel8
    - get: gpdb_src
      resource: gpdb6_src
    - get: gppkgs
    - get: ccp_src
  - task: scale-perf-tests
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/scale-perf-tests.yml
    params:
      RESULTS_LOG_FILE: /tmp/gpbackup.log
      RESULTS_DATABASE_HOST: 10.122.32.4
      RESULTS_DATABASE_USER: postgres
      RESULTS_DATABASE_NAME: gpbackup_refdb
      RESULTS_DATABASE_PASSWORD: ((dp/dev/gcp_refdb_admin_password))
    on_failure:
      *slack_alert
  - task: scale-test-slack-notify
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/scale-tests-slack-notify.yml
    params:
      RESULTS_DATABASE_HOST: 10.122.32.4
      RESULTS_DATABASE_USER: postgres
      RESULTS_DATABASE_NAME: gpbackup_refdb
      SLACK_WEBHOOK_URL: ((dp/webhook_url))
 
