## ######################################################################
##            ___   ___    _  _  ___ _____   ___ ___ ___ _____
##           |   \ / _ \  | \| |/ _ \_   _| | __|   \_ _|_   _|
##           | |) | (_) | | .` | (_) || |   | _|| |) | |  | |
##           |___/ \___/  |_|\_|\___/ |_|   |___|___/___| |_|
##            _____ _  _ ___ ___   ___ ___ _    ___ _
##           |_   _| || |_ _/ __| | __|_ _| |  | __| |
##             | | | __ || |\__ \ | _| | || |__| _||_|
##             |_| |_||_|___|___/ |_| |___|____|___(_)
##
## This is a generated file. Please edit the corresponding template
## file (example: templates/gpbackup-tpl.yml) and regenerate the pipeline
## using appropriate tool (example: gen_pipeline.py -p gpbackup-release).
## ----------------------------------------------------------------------
## Generated by gen_pipeline.py at: 2020-10-28 19:20:19.257678
## Template file: gpbackup-tpl.yml
## Pipeline Name: gpbackup
## Nightly Trigger: True
## Is Prod: True
## ======================================================================
---
groups:
- name: All
  jobs:
  - build_binaries
  - build_gppkgs
  - GPDB4.3
  - GPDB5
  - GPDB5-oracle7
  - GPDB5-sles11
  - GPDB6-ubuntu
  - ddboost_plugin_and_boostfs_tests_43
  - ddboost_plugin_and_boostfs_tests_5x
  - gpbackup-manager-tests
  - 5X-head-gpbackup-fixed-test
  - GPDB6
  - s3_plugin_tests
  - backward-compatibility
  - ddboost_plugin_and_boostfs_tests_6x
  - master
  - final_gate

- name: GPDB4.3
  jobs:
  - GPDB4.3
  - scale-43
  - ddboost_plugin_and_boostfs_tests_43

- name: GPDB5
  jobs:
  - GPDB5
  - GPDB5-oracle7
  - GPDB5-sles11
  - scale-5x
  - ddboost_plugin_and_boostfs_tests_5x
  - 5X-head-gpbackup-fixed-test
  - s3_plugin_tests
  - backward-compatibility

- name: GPDB6
  jobs:
  - GPDB6
  - GPDB6-ubuntu
  - scale-6x
  - ddboost_plugin_and_boostfs_tests_6x
  - s3_plugin_perf
  - ddboost_plugin_perf

- name: Master
  jobs:
  - master
  - scale-master

- name: Scale
  jobs:
  - scale-43
  - scale-5x
  - scale-6x
  - s3_plugin_perf
  - ddboost_plugin_perf
  - scale-master


##### Anchors #####
ccp_default_params_anchor: &ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  terraform_source: ccp_src/google/

ccp_vars_anchor: &ccp_default_vars
  instance_type: n1-standard-1
  PLATFORM: centos6

ccp_vars_anchor_aws: &ccp_default_vars_aws
  aws_instance-node-instance_type: t2.medium
  PLATFORM: centos6

ccp_gen_cluster_default_params_anchor: &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
  AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
  AWS_DEFAULT_REGION: {{aws-region}}
  BUCKET_PATH: clusters-google/
  BUCKET_NAME: {{tf-bucket-name}}
  CLOUD_PROVIDER: google

ddboost_params_anchor: &ddboost_params
  DD_SOURCE_HOST: {{datadomain_source_host}}
  DD_USER: {{datadomain_user}}
  DD_PW: {{datadomain_password}}

ddboost_test_params_anchor: &ddboost_test_params
  <<: *ddboost_params
  DD_DEST_HOST: {{datadomain_dest_host}}
  DD_ENCRYPTED_PW: {{encrypted_datadomain_password}}

ccp_destroy_anchor: &ccp_destroy
  put: terraform
  params: &destroy_params
    action: destroy
    env_name_file: terraform/name
    terraform_source: ccp_src/google/
    vars:
      aws_instance-node-instance_type: t2.micro
      aws_ebs_volume_type: standard
      instance_type: n1-standard-1
  get_params:
    action: destroy

ccp_destroy_anchor_aws: &ccp_destroy_aws
  put: terraform_aws
  params:
    <<: *destroy_params
    env_name_file: terraform_aws/name
    terraform_source: ccp_src/aws/
  get_params:
    action: destroy

ccp_nvme_destroy_anchor: &ccp_destroy_nvme
  put: terraform
  params:
    <<: *destroy_params
    terraform_source: ccp_src/google-nvme-block-device/
  get_params:
    action: destroy

ddboost_ccp_destroy_anchor: &ddboost_ccp_destroy
  put: ddboost_terraform
  params:
    <<: *destroy_params
    env_name_file: ddboost_terraform/name
    terraform_source: ccp_src/aws/
  get_params:
    action: destroy

debug_sleep_anchor: &debug_sleep
  task: debug_sleep
  config:
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: alpine
        tag: latest
    run:
      path: 'sh'
      args: ['-c', 'sleep 2h']
  ensure:
    <<: *ddboost_ccp_destroy

set_failed_anchor: &set_failed
  do:
    - task: on_failure_set_failed
      config:
        platform: linux
        image_resource: &failed_image_resource
          type: docker-image
          source:
            repository: pivotaldata/ccp
            tag: "7"
        inputs:
          - name: ccp_src
          - name: terraform
        run:
          path: 'ccp_src/google/ccp_failed_test.sh'
        params: &failed_params
          GOOGLE_CREDENTIALS: {{google-service-account-key}}
          GOOGLE_PROJECT_ID: {{google-project-id}}
          GOOGLE_ZONE: {{google-zone}}
          GOOGLE_SERVICE_ACCOUNT: {{google-service-account}}
          AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
          AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
          AWS_DEFAULT_REGION: {{tf-machine-region}}
          BUCKET_PATH: clusters-google/
          BUCKET_NAME: {{tf-bucket-name}}

set_failed_anchor_aws: &set_failed_aws
  do:
    - task: on_failure_set_failed
      config:
        platform: linux
        image_resource:
          <<: *failed_image_resource
        inputs:
          - name: ccp_src
          - name: terraform_aws
            path: terraform
        run:
          path: 'ccp_src/aws/ccp_failed_test.sh'
        params:
          <<: *failed_params
          BUCKET_PATH: clusters-aws/

slack_alert_anchor: &slack_alert
  put: slack-alert
  params:
    text: |
      [gpbackup/$BUILD_JOB_NAME] failed:
      https://prod.ci.gpdb.pivotal.io/teams/main/pipelines/gpbackup/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

ddboost_plugin_and_boostfs_anchor: &ddboost_plugin_and_boostfs
  in_parallel:
    - get: centos7-image
    - get: gpbackup_ddboost_plugin
      passed: [build_gppkgs]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: ccp_src
    - get: boostfs_installer
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true

ddboost_plugin_and_boostfs_tests_anchor: &ddboost_plugin_and_boostfs_tests
  do:
  - put: ddboost_terraform
    tags: ["ddboost"]
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/aws/
      vars:
        aws_instance-node-instance_type: t2.medium
        PLATFORM: centos6
  - task: gen_cluster
    tags: ["ddboost"]
    params:
      <<: *ccp_gen_cluster_default_params
      BUCKET_PATH: clusters-aws/
      CLOUD_PROVIDER: aws
    file: ccp_src/ci/tasks/gen_cluster.yml
    input_mapping:
      terraform: ddboost_terraform
  - task: gpinitsystem
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    tags: ["ddboost"]
    image: centos7-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: boostfs_installation
    tags: ["ddboost"]
    image: centos7-image
    file: gpbackup/ci/tasks/boostfs-install.yml
    params:
      <<: *ddboost_params
    on_failure:
      do:
        - *debug_sleep
  - task: run_tests
    tags: ["ddboost"]
    image: centos7-image
    file: gpbackup/ci/tasks/ddboost-plugin-tests.yml
    params:
      <<: *ddboost_test_params
    on_failure:
      do:
        - *slack_alert
        - *debug_sleep
  ensure:
    <<: *ddboost_ccp_destroy


resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    # We fixed this version after v0.12.1 had a breaking change
    tag: 0.11.14

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final


resources:
##### Docker Images #####
- name: centos7-image
  type: docker-image
  source:
    repository: pivotaldata/centos-gpdb-dev
    tag: '7-gcc6.2-llvm3.7'

- name: centos6-image
  type: docker-image
  source:
    repository: pivotaldata/centos-gpdb-dev
    tag: '6-gcc6.2-llvm3.7'

- name: sles11-image
  type: docker-image
  source:
    repository: pivotaldata/sles-gpdb-dev
    tag: '11-beta'

- name: ubuntu-debian-image
  type: docker-image
  source:
    repository: pivotaldata/gpdb6-ubuntu18.04-build
    tag: 'latest'

- name: ubuntu-debian-test-image
  type: docker-image
  source:
    repository: pivotaldata/gpdb6-ubuntu18.04-test
    tag: 'latest'

##### Other Resources #####
- name: nightly-trigger
  type: time
  source:
    location: America/Los_Angeles
    days: [Sunday, Monday, Tuesday, Wednesday, Thursday, Friday]
    start: 6:00 AM
    stop: 7:00 AM

# TODO mark these as src with name change
- name: gpbackup
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpbackup
    branch: {{gpbackup-git-branch}}

- name: gpbackup_s3_plugin
  type: git
  icon: github-circle
  source:
    branch: {{gpbackup-s3-plugin-git-branch}}
    uri: https://github.com/greenplum-db/gpbackup-s3-plugin

- name: gpbackup_ddboost_plugin
  type: git
  icon: github-circle
  source:
    branch: {{gpbackup-ddboost-plugin-branch}} 
    private_key: {{gpbackup-ddboost-plugin-remote-key}}
    uri: {{gpbackup-ddboost-plugin-git-remote}}

- name: gpbackup_manager_src
  type: git
  icon: github-circle
  source:
    branch: master
    private_key: {{gp-backup-manager-remote-deploy-key}}
    uri: {{gp-backup-manager-git-remote}}

- name: gpdb5_src
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpdb
    branch: 5X_STABLE

# We use this intermediate binary in an effort to catch possible
# inconsistencies (between a new gpdb5 bin and a fixed version of gpbackup)
# before a final release_candidate is generated & shipped
- name: bin_gpdb_5x_stable_intermediate
  type: s3
  icon: amazon
  source:
    bucket: gpdb5-stable-concourse-builds
    versioned_file: bin_gpdb_centos/bin_gpdb.tar.gz
    region_name: us-west-2
    access_key_id: {{bucket-access-key-id}}
    secret_access_key: {{bucket-secret-access-key}}

- name: gpdb6_src
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpdb
    branch: 6X_STABLE

- name: bin_gpdb_5x_sles11
  type: s3
  icon: amazon
  source:
    bucket: gpdb5-stable-concourse-builds
    access_key_id: {{bucket-access-key-id}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: bin_gpdb_sles11/gpdb_branch_5X_STABLE/icw_green/bin_gpdb.tar.gz

- name: bin_gpdb_6x_stable_ubuntu
  type: gcs
  icon: google
  source:
    bucket: ((gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/gpdb6/server-rc-(.*)-ubuntu18.04_x86_64((rc-build-type-gcs)).tar.gz

- name: gpdb_master_src
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpdb
    branch: master

- name: bin_gpdb_master_centos7
  type: gcs
  icon: google
  source:
    bucket: ((gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/master/server-rc-(.*)-rhel7_x86_64((rc-build-type-gcs)).tar.gz

# These binaries are used for backwards-compatibility testing only
- name: bin_gpbackup_1.0.0_and_1.7.1
  type: s3
  icon: amazon
  source:
    bucket: gpbackup-dependencies
    versioned_file: gpbackup_bins_1.0.0_and_1.7.1.tar.gz
    region_name: us-west-2
    access_key_id: {{bucket-access-key-id}}
    secret_access_key: {{bucket-secret-access-key}}

# This is specifically for sles11 images because it cannot connect to github due to TLS issues
- name: libyaml-0.1.7
  type: s3
  icon: amazon
  source:
    bucket: gpbackup-dependencies
    versioned_file: gpbackup-dependencies/libyaml-0.1.7.tar.gz
    region_name: us-west-2
    access_key_id: {{bucket-access-key-id}}
    secret_access_key: {{bucket-secret-access-key}}

- name: pgcrypto43
  type: s3
  icon: amazon
  source:
    bucket: pgcrypto43
    access_key_id: {{bucket-access-key-id}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: pgcrypto-ossv1.1_pv(.*)_gpdb4.3orca-rhel5-x86_64.gppkg

# Manual caching to prevent dep flakes when downloading dependencies
- name: gpbackup_1.12.1_dependencies
  type: s3
  icon: amazon
  source:
    bucket: gpbackup-dependencies
    versioned_file: gpbackup_1.12.1_dependencies.tar.gz
    region_name: us-west-2
    access_key_id: {{bucket-access-key-id}}
    secret_access_key: {{bucket-secret-access-key}}

- name: dummy_seclabel_linux_gpdb6
  type: gcs
  icon: google
  source:
    bucket: dummy_seclabel_gpdb_linux
    json_key: ((gcp_svc_acct_key))
    regexp: dummy_seclabel_gpdb6-v(.*).so

- name: dummy_seclabel_linux_master
  type: gcs
  icon: google
  source:
    bucket: dummy_seclabel_gpdb_linux
    json_key: ((gcp_svc_acct_key))
    regexp: dummy_seclabel_gpdb7-v(.*).so

- name: bin_gpdb_5x_stable_centos6
  type: s3
  icon: amazon
  source:
    bucket: gpdb-stable-concourse-builds
    versioned_file: release_candidates/bin_gpdb_centos6/gpdb5/bin_gpdb.tar.gz
    region_name: us-west-2
    access_key_id: {{bucket-access-key-id}}
    secret_access_key: {{bucket-secret-access-key}}

- name: bin_gpdb_5x_stable_centos7
  type: s3
  icon: amazon
  source:
    bucket: gpdb-stable-concourse-builds
    versioned_file: release_candidates/bin_gpdb_centos7/gpdb5/bin_gpdb.tar.gz
    region_name: us-west-2
    access_key_id: {{bucket-access-key-id}}
    secret_access_key: {{bucket-secret-access-key}}

- name: bin_gpdb_6x_stable_centos6
  type: gcs
  icon: google
  source:
    bucket: ((gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/gpdb6/server-rc-(.*)-rhel6_x86_64((rc-build-type-gcs)).tar.gz

- name: bin_gpdb_6x_stable_centos7
  type: gcs
  icon: google
  source:
    bucket: ((gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/gpdb6/server-rc-(.*)-rhel7_x86_64((rc-build-type-gcs)).tar.gz

- name: bin_gpdb_43_stable
  type: s3
  icon: amazon
  source:
    bucket: gpdb-4.3-stable-concourse
    versioned_file: bin_gpdb_centos/bin_gpdb.tar.gz
    region_name: us-west-2
    access_key_id: {{gpdb4-bucket-access-key-id}}
    secret_access_key: {{gpdb4-bucket-secret-access-key}}

- name: ccp_src
  type: git
  icon: github-circle
  source:
    branch: {{ccp-git-branch}}
    private_key: {{ccp-git-key}}
    uri: {{ccp-git-remote}}

- name: terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
      GOOGLE_CREDENTIALS: {{google-service-account-key}}
    vars:
      project_id: {{google-project-id}}
    storage:
      access_key_id: {{tf-machine-access-key-id}}
      secret_access_key: {{tf-machine-secret-access-key}}
      region_name: {{aws-region}}
      bucket: {{tf-bucket-name}}
      bucket_path: clusters-google/

- name: ddboost_terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
    storage:
      access_key_id: {{tf-machine-access-key-id}}
      secret_access_key: {{tf-machine-secret-access-key}}
      region_name: {{aws-region}}
      bucket: {{tf-bucket-name}}
      bucket_path: clusters-aws/

- name: scale_schema
  type: s3
  icon: amazon
  source:
    access_key_id: {{gpdb4-bucket-access-key-id}}
    bucket: {{dpm_bucket}}
    region_name: {{aws-region}}
    secret_access_key: {{gpdb4-bucket-secret-access-key}}
    versioned_file: scale-schemas/scale_db1.tgz

- name: boostfs_installer
  type: s3
  icon: amazon
  source:
    access_key_id: {{gpdb4-bucket-access-key-id}}
    bucket: {{dpm_bucket}}
    region_name: {{aws-region}}
    secret_access_key: {{gpdb4-bucket-secret-access-key}}
    versioned_file: DDBoostFS-1.1.0.1-565598.rhel.x86_64.rpm

- name: slack-alert
  type: slack-notification
  source:
    url: {{dpm_webhook_url}}
    disable: ((dpm_disable_slack_alert))

- name: pivnet_release_cache
  type: s3
  icon: amazon
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{pivnet_bucket_name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: pivnet_release_version/v-(.*)


- name: gpbackup-go-components
  type: s3
  icon: amazon
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{gpdb-stable-bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: gpbackup-go-components/go_components.tar.gz

- name: gppkgs
  type: s3
  icon: amazon
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{gpdb-stable-bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: gppkgs/intermediates/gpbackup-gppkgs.tar.gz


- name: terraform_aws
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
      GOOGLE_CREDENTIALS: {{google-service-account-key}}
    vars:
      project_id: {{google-project-id}}
    storage:
      access_key_id: {{tf-machine-access-key-id}}
      secret_access_key: {{tf-machine-secret-access-key}}
      region_name: {{aws-region}}
      # This is not parameterized, on purpose. All tfstates will go to this spot,
      # and different teams will place there clusters' tfstate files under different paths
      bucket: gpdb5-pipeline-dynamic-terraform
      bucket_path: clusters-aws/


- name: gpbackup-release-license
  type: gcs
  icon: google
  source:
    bucket: gpbackup-release-licenses
    json_key: ((gcp_svc_acct_key))
    regexp: open_source_license_VMware_Tanzu_Greenplum_Backup_and_Restore_(.*)_.*.txt

jobs:
- name: build_binaries
  plan:
  - in_parallel:
    - get: centos6-image
    - get: gpbackup_s3_plugin
      trigger: true
    - get: gpbackup_manager_src
      trigger: true
    - get: gpbackup
      trigger: true
    - get: pivnet_release_cache
  - task: build-go-binaries
    image: centos6-image
    file: gpbackup/ci/tasks/build-go-binaries.yml
  - put: gpbackup-go-components
    params:
      file: go_components/go_components.tar.gz

- name: build_gppkgs
  plan:
  - in_parallel:
    - get: centos6-image
    - get: sles11-image
    - get: bin_gpdb_5x_sles11
    - get: libyaml-0.1.7
    - get: ubuntu-debian-image
    - get: ubuntu-debian-test-image
    - get: bin_gpdb_6x_stable_ubuntu
    - get: gpdb_src
      resource: gpdb6_src
    - get: gpbackup-go-components
      trigger: true
      passed: [build_binaries]
    - get: bin_gpdb_6x_stable_centos6
    - get: gpbackup
      passed: [build_binaries]
    - get: gpbackup_ddboost_plugin
      trigger: true
    - get: pivnet_release_cache
    - get: gpbackup-release-license
  - task: gpbackup-tools-versions
    image: centos6-image
    file: gpbackup/ci/tasks/gpbackup-tools-versions.yml
  - in_parallel:
    - do: # RHEL
      - task: build-ddboost-RHEL
        image: centos6-image
        file: gpbackup/ci/tasks/build-ddboost.yml
        input_mapping:
          bin_gpdb: bin_gpdb_6x_stable_centos6
      - task: tar-binaries-RHEL
        image: centos6-image
        file: gpbackup/ci/tasks/build-os-tars.yml
      - task: build_gppkgs-RHEL
        image: centos6-image
        file: gpbackup/ci/tasks/build-gppkg.yml
        input_mapping:
          bin_gpdb: bin_gpdb_6x_stable_centos6
        output_mapping:
          gppkgs: rhel-gppkg
        params:
          OS: RHEL
    - do: # SLES
      - task: build-ddboost-SLES
        image: sles11-image
        file: gpbackup/ci/tasks/build-ddboost.yml
        input_mapping:
          bin_gpdb: bin_gpdb_5x_sles11
      - task: tar-binaries-SLES
        image: sles11-image
        file: gpbackup/ci/tasks/build-os-tars.yml
      - task: build_gppkgs-SLES
        # We need to use centos image for doing rpm-build for sles
        image: centos6-image
        file: gpbackup/ci/tasks/build-gppkg.yml
        input_mapping:
          bin_gpdb: bin_gpdb_5x_sles11
        output_mapping:
          gppkgs: sles-gppkg
        params:
          OS: SLES
    - do: # ubuntu
        - task: build-ddboost-ubuntu
          image: ubuntu-debian-image
          file: gpbackup/ci/tasks/build-ddboost.yml
          input_mapping:
            bin_gpdb: bin_gpdb_6x_stable_ubuntu
        - task: tar-binaries-ubuntu
          image: ubuntu-debian-image
          file: gpbackup/ci/tasks/build-os-tars.yml
        - task: build_gppkgs-ubuntu
          image: ubuntu-debian-test-image
          file: gpbackup/ci/tasks/build-gppkg.yml
          input_mapping:
            bin_gpdb: bin_gpdb_6x_stable_ubuntu
          output_mapping:
            gppkgs: ubuntu-gppkg
          params:
            OS: ubuntu
  - task: tar-gppkgs
    image: centos6-image
    file: gpbackup/ci/tasks/tar-gppkgs.yml
  - put: gppkgs
    params:
      file: gppkgs/gpbackup-gppkgs.tar.gz

- name: s3_plugin_tests
  plan:
  - in_parallel:
    - get: centos7-image
    - get: gpbackup_s3_plugin
      passed: [build_binaries]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_src
      resource: gpdb5_src
    - get: gpdb_binary
      resource: bin_gpdb_5x_stable_centos6
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - do:
      - get: ccp_src
      - put: terraform
        params:
          <<: *ccp_default_params
          vars:
            <<: *ccp_default_vars
            PLATFORM: centos7
      - task: gen_cluster
        file: ccp_src/ci/tasks/gen_cluster.yml
        params:
          <<: *ccp_gen_cluster_default_params
          PLATFORM: centos7
      - task: gpinitsystem
        file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    image: centos7-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: run_tests
    image: centos7-image
    file: gpbackup/ci/tasks/s3-plugin-tests.yml
    params:
      REGION: us-west-2
      AWS_ACCESS_KEY_ID: {{bucket-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{bucket-secret-access-key}}
      BUCKET: {{gpbackup-s3-plugin-test-bucket}}
  on_success:
    <<: *ccp_destroy
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

- name: s3_plugin_perf
  plan:
  - in_parallel:
    - get: centos7-image
    - get: gpbackup_s3_plugin
      passed: [build_binaries]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_src
      resource: gpdb6_src
    - get: gpdb_binary
      resource: bin_gpdb_6x_stable_centos6
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - do:
      - get: ccp_src
      - put: terraform
        params:
          <<: *ccp_default_params
          terraform_source: ccp_src/google-nvme-block-device/
          vars:
            PLATFORM: centos6
            number_of_nodes: 4
            segments_per_host: 4
            instance_type: n1-standard-8
            ccp_reap_minutes: 240
      - task: gen_cluster
        file: ccp_src/ci/tasks/gen_cluster.yml
        params:
          <<: *ccp_gen_cluster_default_params
      - task: gpinitsystem
        file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    image: centos7-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: run_perf
    image: centos7-image
    file: gpbackup/ci/tasks/s3-plugin-perf.yml
    params:
      REGION: us-west-2
      AWS_ACCESS_KEY_ID: {{bucket-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{bucket-secret-access-key}}
      BUCKET: {{gpbackup-s3-plugin-test-bucket}}
      SCALE_FACTOR: 1
  on_success:
    <<: *ccp_destroy
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

- name: gpbackup-manager-tests
  plan:
  - in_parallel:
    - get: centos7-image
    - get: gpbackup_manager_src
      passed: [build_binaries]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb
      resource: bin_gpdb_6x_stable_centos6
    - get: gpdb_src
      resource: gpdb6_src
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - task: run_tests
    image: centos7-image
    file: gpbackup/ci/tasks/test-gpbackup-manager.yml

- name: ddboost_plugin_and_boostfs_tests_43
  plan:
  - in_parallel:
    - get: gpdb_src
      resource: gpdb5_src
    - get: gpdb_binary
      resource: bin_gpdb_43_stable
    - get: pgcrypto43
  - <<: *ddboost_plugin_and_boostfs
  - <<: *ddboost_plugin_and_boostfs_tests

- name: ddboost_plugin_and_boostfs_tests_5x
  plan:
  - in_parallel:
    - get: gpdb_src
      resource: gpdb5_src
    - get: gpdb_binary
      resource: bin_gpdb_5x_stable_centos6
  - <<: *ddboost_plugin_and_boostfs
  - <<: *ddboost_plugin_and_boostfs_tests

- name: ddboost_plugin_and_boostfs_tests_6x
  plan:
  - in_parallel:
    - get: gpdb_src
      resource: gpdb6_src
    - get: gpdb_binary
      resource: bin_gpdb_6x_stable_centos6
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_gpdb6
  - <<: *ddboost_plugin_and_boostfs
  - <<: *ddboost_plugin_and_boostfs_tests

- name: ddboost_plugin_perf
  plan:
  - in_parallel:
    - get: gpdb_src
      resource: gpdb6_src
    - get: gpdb_binary
      resource: bin_gpdb_6x_stable_centos6
    - do:
      - <<: *ddboost_plugin_and_boostfs
      - put: ddboost_terraform
        tags: ["ddboost"]
        params:
          <<: *ccp_default_params
          PLATFORM: centos6
          terraform_source: ccp_src/aws/
          vars:
            number_of_nodes: 4
            segments_per_host: 4
            aws_instance-node-instance_type: i3.xlarge
            ccp_reap_minutes: 240
      - task: gen_cluster
        tags: ["ddboost"]
        params:
          <<: *ccp_gen_cluster_default_params
          BUCKET_PATH: clusters-aws/
          CLOUD_PROVIDER: aws
        file: ccp_src/ci/tasks/gen_cluster.yml
        input_mapping:
          terraform: ddboost_terraform
      - task: gpinitsystem
        tags: ["ddboost"]
        file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    tags: ["ddboost"]
    image: centos7-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: run_perf
    tags: ["ddboost"]
    image: centos7-image
    file: gpbackup/ci/tasks/ddboost-plugin-perf.yml
    params:
      <<: *ddboost_test_params
      REGION: us-west-2
      AWS_ACCESS_KEY_ID: {{bucket-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{bucket-secret-access-key}}
      BUCKET: {{gpbackup-s3-plugin-test-bucket}}
      SCALE_FACTOR: 1
    on_failure:
      do:
        - *slack_alert
        - *debug_sleep
  ensure:
    <<: *ddboost_ccp_destroy

- name: GPDB5-sles11
  plan:
  - in_parallel:
    - get: sles11-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_5x_sles11
      trigger: true
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb5_src
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        PLATFORM: sles12
        default_image_user: root
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: sles12
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: integration-tests
    image: sles11-image
    file: gpbackup/ci/tasks/gpbackup-tests.yml
    params:
      OS: SLES
  on_success:
    <<: *ccp_destroy
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

- name: GPDB5-oracle7
  plan:
  - in_parallel:
    - get: centos6-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_5x_stable_centos7
      trigger: true
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb5_src
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - put: terraform_aws
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/aws/
      vars:
        <<: *ccp_default_vars_aws
        PLATFORM: oracle7
        default_ami_user: clckwrk
        disk_size: 30
  - task: gen_cluster
    tags: ['aws']
    file: ccp_src/ci/tasks/gen_cluster.yml
    input_mapping:
      terraform: terraform_aws
    params:
      <<: *ccp_gen_cluster_default_params
      BUCKET_PATH: clusters-aws/
      CLOUD_PROVIDER: aws
      PLATFORM: oracle7
  - task: gpinitsystem
    tags: ['aws']
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-oracle-env
    tags: ['aws']
    image: centos6-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
    params:
      default_ami_user: clckwrk
  - task: integration-tests
    tags: ['aws']
    image: centos6-image
    file: gpbackup/ci/tasks/all-tests.yml
  on_success:
    <<: *ccp_destroy_aws
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed_aws

- name: GPDB6-ubuntu
  plan:
  - in_parallel:
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_6x_stable_ubuntu
      trigger: true
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb6_src
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_gpdb6
    - get: ubuntu-debian-test-image
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        PLATFORM: ubuntu18.04
        default_image_user: root
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: ubuntu
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: integration-tests
    image: ubuntu-debian-test-image
    file: gpbackup/ci/tasks/gpbackup-tests.yml
    params:
      OS: ubuntu
      default_ami_user: ubuntu
  on_success:
    <<: *ccp_destroy
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

- name: master
  plan:
  - in_parallel:
    - get: centos7-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb_master_centos7
      trigger: true
    - get: gpdb_src
      resource: gpdb_master_src
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_master
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - task: run-tests-locally-centos7
    image: centos7-image
    file: gpbackup/ci/tasks/test-on-local-cluster.yml
    params:
      REQUIRES_DUMMY_SEC: true
    input_mapping:
      bin_gpdb: bin_gpdb_master_centos7
  on_failure:
    *slack_alert

- name: GPDB4.3
  plan:
  - in_parallel:
    - get: centos6-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb
      resource: bin_gpdb_43_stable
      trigger: true
    - get: gpdb_src
      resource: gpdb5_src
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
  - task: run-tests-locally-centos6
    image: centos6-image
    file: gpbackup/ci/tasks/test-on-local-cluster.yml
  on_failure:
    *slack_alert

- name: GPDB5
  plan:
  - in_parallel:
    - get: centos6-image
    - get: centos7-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb_5x_stable_centos6
      trigger: true
    - get: bin_gpdb_5x_stable_centos7
    - get: gpdb_src
      resource: gpdb5_src
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - in_parallel:
    - task: run-tests-locally-centos6
      image: centos6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      input_mapping:
        bin_gpdb: bin_gpdb_5x_stable_centos6
    - task: run-tests-locally-centos7
      image: centos7-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      input_mapping:
        bin_gpdb: bin_gpdb_5x_stable_centos7
  on_failure:
    *slack_alert

- name: GPDB6
  plan:
  - in_parallel:
    - get: centos6-image
    - get: centos7-image
    - get: ubuntu-debian-test-image
    - get: bin_gpdb_6x_stable_ubuntu
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb_6x_stable_centos6
      trigger: true
    - get: bin_gpdb_6x_stable_centos7
    - get: gpdb_src
      resource: gpdb6_src
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_gpdb6
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - in_parallel:
    - task: run-tests-locally-centos6
      image: centos6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
      input_mapping:
        bin_gpdb: bin_gpdb_6x_stable_centos6
    - task: run-tests-locally-centos7
      image: centos7-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
      input_mapping:
        bin_gpdb: bin_gpdb_6x_stable_centos7
    - task: run-tests-locally-ubuntu-debian
      image: ubuntu-debian-test-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        OS: ubuntu
      input_mapping:
        bin_gpdb: bin_gpdb_6x_stable_ubuntu
  on_failure:
    *slack_alert

- name: backward-compatibility
  plan:
  - in_parallel:
    - get: centos6-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_5x_stable_centos6
      trigger: true
    - get: bin_gpbackup_1.0.0_and_1.7.1
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb5_src
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    image: centos6-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: backup-1.0.0-restore-latest
    image: centos6-image
    file: gpbackup/ci/tasks/all-tests.yml
    params:
      GPBACKUP_VERSION: "1.0.0"
  - task: backup-1.7.1-restore-latest
    image: centos6-image
    file: gpbackup/ci/tasks/all-tests.yml
    params:
      GPBACKUP_VERSION: "1.7.1"
  on_success:
    <<: *ccp_destroy
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

# Ensure compatibility between a new GPDB5 binary and a fixed version of gpbackup
- name: 5X-head-gpbackup-fixed-test
  plan:
  - in_parallel:
    - get: centos6-image
    # NOTE: This is not being used, but is required input for the final_gate
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_5x_stable_intermediate
      trigger: true
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb5_src
    - get: gpbackup_1.12.1_dependencies
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    image: centos6-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: gpbackup-1.12.1-test
    image: centos6-image
    file: gpbackup/ci/tasks/integration-tests-fixed-version.yml
    params:
      GPBACKUP_VERSION: "1.12.1"
  on_success:
    <<: *ccp_destroy
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

- name: scale-master
  plan:
  - in_parallel:
    - get: centos7-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_master_centos7
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb_master_src
    - get: scale_schema
    - get: nightly-trigger
      trigger: true
    - get: gppkgs
      passed: [build_gppkgs]
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        instance_type: n1-standard-8
        PLATFORM: centos7
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos7
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    image: centos7-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: scale-tests
    image: centos7-image
    file: gpbackup/ci/tasks/scale-tests.yml
  on_success:
    <<: *ccp_destroy_nvme
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

- name: scale-6x
  plan:
  - in_parallel:
    - get: centos7-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_6x_stable_centos7
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb6_src
    - get: scale_schema
    - get: nightly-trigger
      trigger: true
    - get: gppkgs
      passed: [build_gppkgs]
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        instance_type: n1-standard-8
        PLATFORM: centos7
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos7
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    image: centos7-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: scale-tests
    image: centos7-image
    file: gpbackup/ci/tasks/scale-tests.yml
  on_success:
    <<: *ccp_destroy_nvme
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

- name: scale-5x
  plan:
  - in_parallel:
    - get: centos6-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_5x_stable_centos6
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb5_src
    - get: scale_schema
    - get: nightly-trigger
      trigger: true
    - get: gppkgs
      passed: [build_gppkgs]
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        instance_type: n1-standard-8
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    image: centos6-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: scale-tests
    image: centos6-image
    file: gpbackup/ci/tasks/scale-tests.yml
  on_success:
    <<: *ccp_destroy_nvme
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

- name: scale-43
  plan:
  - in_parallel:
    - get: centos6-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_43_stable
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb5_src
    - get: scale_schema
    - get: nightly-trigger
      trigger: true
    - get: gppkgs
      passed: [build_gppkgs]
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        instance_type: n1-standard-8
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    image: centos6-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: scale-tests
    image: centos6-image
    file: gpbackup/ci/tasks/scale-tests.yml
  on_success:
    <<: *ccp_destroy_nvme
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed


- name: final_gate
  plan:
  - in_parallel:
    - get: gppkgs
      trigger: true
      passed:
        - build_gppkgs
        - GPDB4.3
        - GPDB5
        - GPDB6
        - master
        - s3_plugin_tests
        - backward-compatibility
        - 5X-head-gpbackup-fixed-test
        - GPDB5-oracle7
        - GPDB5-sles11
        - GPDB6-ubuntu
        - ddboost_plugin_and_boostfs_tests_43
        - ddboost_plugin_and_boostfs_tests_5x
        - ddboost_plugin_and_boostfs_tests_6x
        - gpbackup-manager-tests
