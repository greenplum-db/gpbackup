---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
- name: gpbackup
  type: git
  source:
    uri: https://github.com/greenplum-db/gpbackup
    branch: master
    ignore_paths:
    - ci

- name: gpbackup-ci
  type: git
  source:
    uri: https://github.com/greenplum-db/gpbackup
    branch: master
    paths:
    - ci

- name: gpdb_src
  type: git
  source:
    uri: https://github.com/greenplum-db/gpdb
    branch: 5X_STABLE
    tag_filter: 5.*

- name: bin_gpdb_master
  type: s3
  source:
      bucket: gpdb5-assert-concourse-builds
      versioned_file: bin_gpdb_centos/bin_gpdb.tar.gz
      region_name: us-west-2
      access_key_id: {{bucket-access-key-id}}
      secret_access_key: {{bucket-secret-access-key}}

- name: bin_gpdb_5x_stable
  type: s3
  source:
      bucket: gpdb5-release-builds
      versioned_file: bin_gpdb_centos6/bin_gpdb.tar.gz
      region_name: us-west-2
      access_key_id: {{bucket-access-key-id}}
      secret_access_key: {{bucket-secret-access-key}}

- name: bin_gpdb_43_stable
  type: s3
  source:
      bucket: gpdb-4.3-release
      versioned_file: bin_gpdb_centos5/bin_gpdb.tar.gz
      region_name: us-west-2
      access_key_id: {{gpdb4-bucket-access-key-id}}
      secret_access_key: {{gpdb4-bucket-secret-access-key}}

- name: ccp_src
  type: git
  source:
    branch: {{ccp-git-branch}}
    private_key: {{ccp-git-key}}
    uri: {{ccp-git-remote}}
    tag_filter: 1.4.2

- name: terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
    storage:
      access_key_id: {{tf-machine-access-key-id}}
      secret_access_key: {{tf-machine-secret-access-key}}
      region_name: {{aws-region}}
      bucket: gpdb5-pipeline-dynamic-terraform
      bucket_path: prod/gpbackup/

- name: scale_schema
  type: s3
  source:
    access_key_id: {{gpdb4-bucket-access-key-id}}
    bucket: {{netbackup_installer_bucket}}
    region_name: {{aws-region}}
    secret_access_key: {{gpdb4-bucket-secret-access-key}}
    versioned_file: scale-schemas/scale_db1.tgz


jobs:
- name: units
  plan:
  - aggregate:
    - get: gpbackup
      trigger: true
    - get: gpbackup-ci
  - task: unit-tests
    file: gpbackup-ci/ci/tasks/unit-tests.yml

- name: integrations-master
  plan:
  - aggregate:
    - get: gpbackup
      tags: ["ccp"]
      trigger: true
    - get: gpbackup-ci
      tags: ["ccp"]
    - get: bin_gpdb_master
      tags: ["ccp"]
    - get: ccp_src
      tags: ["ccp"]
    - get: gpdb_src
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_create_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb_master
      gpdb_src: gpdb_src
    on_failure:
      <<: *ccp_destroy
  - task: integration-tests
    tags: ["ccp"]
    file: gpbackup-ci/ci/tasks/integration-tests.yml
    on_failure:
      <<: *ccp_destroy
  - *ccp_destroy

- name: integrations-GPDB5
  plan:
  - aggregate:
    - get: gpbackup
      tags: ["ccp"]
      trigger: true
    - get: gpbackup-ci
      tags: ["ccp"]
    - get: bin_gpdb_5x_stable
      tags: ["ccp"]
    - get: ccp_src
      tags: ["ccp"]
    - get: gpdb_src
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_create_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    input_mapping:
      gpdb_binary: bin_gpdb_5x_stable
      gpdb_src: gpdb_src
    on_failure:
      <<: *ccp_destroy
  - task: integration-tests
    tags: ["ccp"]
    file: gpbackup-ci/ci/tasks/integration-tests.yml
    on_failure:
      <<: *ccp_destroy
  - *ccp_destroy

- name: integrations-GPDB4.3
  plan:
  - aggregate:
    - get: gpbackup
      tags: ["ccp"]
      trigger: true
    - get: gpbackup-ci
      tags: ["ccp"]
    - get: bin_gpdb_43_stable
      tags: ["ccp"]
    - get: ccp_src
      tags: ["ccp"]
    - get: gpdb_src
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_create_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    input_mapping:
      gpdb_binary: bin_gpdb_43_stable
      gpdb_src: gpdb_src
    on_failure:
      <<: *ccp_destroy
  - task: integration-tests
    tags: ["ccp"]
    file: gpbackup-ci/ci/tasks/integration-tests.yml
    on_failure:
      <<: *ccp_destroy
  - *ccp_destroy

- name: scale-master
  plan:
  - aggregate:
    - get: gpbackup
      tags: ["ccp"]
    - get: gpbackup-ci
      tags: ["ccp"]
    - get: bin_gpdb_master
      tags: ["ccp"]
    - get: ccp_src
      tags: ["ccp"]
    - get: gpdb_src
      tags: ["ccp"]
    - get: scale_schema
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_create_params
      terraform_source: ccp_src/aws-nvme-block-device/
      vars:
        aws_instance-node-instance_type: i3.large
        aws_ebs_volume_type: gp2
        number_of_nodes: 1
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    input_mapping:
      gpdb_binary: bin_gpdb_master
      gpdb_src: gpdb_src
    on_failure:
      <<: *ccp_destroy
  - task: scale-tests
    tags: ["ccp"]
    file: gpbackup-ci/ci/tasks/scale-tests.yml
    on_failure:
      <<: *debug_sleep
  - *ccp_destroy

- name: scale-5x-stable
  plan:
  - aggregate:
    - get: gpbackup
      tags: ["ccp"]
    - get: gpbackup-ci
      tags: ["ccp"]
    - get: bin_gpdb_5x_stable
      tags: ["ccp"]
    - get: ccp_src
      tags: ["ccp"]
    - get: gpdb_src
      tags: ["ccp"]
    - get: scale_schema
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_create_params
      terraform_source: ccp_src/aws-nvme-block-device/
      vars:
        aws_instance-node-instance_type: i3.large
        aws_ebs_volume_type: gp2
        number_of_nodes: 1
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    input_mapping:
      gpdb_binary: bin_gpdb_5x_stable
      gpdb_src: gpdb_src
    on_failure:
      <<: *ccp_destroy
  - task: scale-tests
    tags: ["ccp"]
    file: gpbackup-ci/ci/tasks/scale-tests.yml
    on_failure:
      <<: *debug_sleep
  - *ccp_destroy

- name: scale-43-stable
  plan:
  - aggregate:
    - get: gpbackup
      tags: ["ccp"]
    - get: gpbackup-ci
      tags: ["ccp"]
    - get: bin_gpdb_43_stable
      tags: ["ccp"]
    - get: ccp_src
      tags: ["ccp"]
    - get: gpdb_src
      tags: ["ccp"]
    - get: scale_schema
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_create_params
      terraform_source: ccp_src/aws-nvme-block-device/
      vars:
        aws_instance-node-instance_type: i3.large
        aws_ebs_volume_type: gp2
        number_of_nodes: 1
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    input_mapping:
      gpdb_binary: bin_gpdb_43_stable
      gpdb_src: gpdb_src
    on_failure:
      <<: *ccp_destroy
  - task: scale-tests
    tags: ["ccp"]
    file: gpbackup-ci/ci/tasks/scale-tests.yml
    on_failure:
      <<: *debug_sleep
  - *ccp_destroy

ccp_create_params_anchor: &ccp_create_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  terraform_source: ccp_src/aws/

ccp_vars_anchor: &ccp_default_vars
  aws_instance-node-instance_type: t2.medium
  aws_ebs_volume_type: standard
  platform: centos6

ccp_gen_cluster_default_params_anchor: &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
  AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
  AWS_DEFAULT_REGION: {{aws-region}}
  BUCKET_PATH: {{tf-bucket-path}}
  BUCKET_NAME: {{tf-bucket-name}}


ccp_destroy_anchor: &ccp_destroy
  put: terraform
  tags: ["ccp"]
  params:
    action: destroy
    env_name_file: terraform/name
    terraform_source: ccp_src/aws/
    vars:
      aws_instance-node-instance_type: t2.micro
  get_params:
    action: destroy

debug_sleep_anchor: &debug_sleep
  do:
  - task: debug_sleep
    tags: ["ccp"]
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
          tag: latest
      run:
        path: 'sh'
        args: ['-c', 'sleep 2h']
  ensure:
    <<: *ccp_destroy
