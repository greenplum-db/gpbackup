## ######################################################################
##            ___   ___    _  _  ___ _____   ___ ___ ___ _____
##           |   \ / _ \  | \| |/ _ \_   _| | __|   \_ _|_   _|
##           | |) | (_) | | .` | (_) || |   | _|| |) | |  | |
##           |___/ \___/  |_|\_|\___/ |_|   |___|___/___| |_|
##            _____ _  _ ___ ___   ___ ___ _    ___ _
##           |_   _| || |_ _/ __| | __|_ _| |  | __| |
##             | | | __ || |\__ \ | _| | || |__| _||_|
##             |_| |_||_|___|___/ |_| |___|____|___(_)
##
## This is a generated file. Please edit the corresponding template
## file (example: templates/gpbackup-tpl.yml) and regenerate the pipeline
## using appropriate tool (example: gen_pipeline.py -p gpbackup-release).
## ----------------------------------------------------------------------
## Generated by gen_pipeline.py at: 2023-01-13 12:08:22.296980
## Template file: gpbackup-tpl.yml
## Pipeline Name: gpbackup-release
## Nightly Trigger: True
## Is Prod: True
## ======================================================================
---
groups:
- name: All
  jobs:
  - build_binaries
  - build_gppkgs
  - GPDB4.3
  - GPDB5
  - GPDB5-sles11
  - GPDB6-ubuntu
  - ddboost_plugin_and_boostfs_tests_43
  - ddboost_plugin_and_boostfs_tests_5x
  - gpbackup-manager-tests
  - GPDB6
  - GPDB6-7-seg-cluster
  - GPDB7
  - s3_plugin_tests
  - backward-compatibility
  - ddboost_plugin_and_boostfs_tests_6x
  - push-to-github
  - green_gate
  - push-to-pivnet

- name: GPDB4.3
  jobs:
  - GPDB4.3
  - ddboost_plugin_and_boostfs_tests_43

- name: GPDB5
  jobs:
  - GPDB5
  - GPDB5-sles11
  - ddboost_plugin_and_boostfs_tests_5x
  - s3_plugin_tests
  - backward-compatibility

- name: GPDB6
  jobs:
  - GPDB6
  - GPDB6-7-seg-cluster
  - GPDB6-ubuntu
  - ddboost_plugin_and_boostfs_tests_6x
  - s3_plugin_perf
  - ddboost_plugin_perf

- name: GPDB7
  jobs:
  - GPDB7


- name: Packaging and Release
  jobs:
  - build_binaries
  - push-to-github
  - green_gate
  - push-to-pivnet

##### Anchors #####
anchors:
- &ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  plugin_dir: ../../terraform.d/plugin-cache/linux_amd64
  terraform_source: ccp_src/google/

- &ccp_default_vars
  instance_type: n1-standard-1
  PLATFORM: centos6

- &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
  AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
  AWS_DEFAULT_REGION: ((dp/aws-region))
  BUCKET_PATH: clusters-google/
  BUCKET_NAME: ((dp/tf-bucket-name))
  CLOUD_PROVIDER: google

- &destroy_params
  action: destroy
  plugin_dir: ../../terraform.d/plugin-cache/linux_amd64
  terraform_source: ccp_src/google/
  env_name_file: terraform/name
  vars:
    aws_instance-node-instance_type: t2.micro #t2.micro is ignored in destroy, but aws_instance-node-instance_type is required.
    aws_ebs_volume_type: standard

- &ccp_destroy
  put: terraform
  params:
    <<: *destroy_params
  get_params:
    action: destroy

- &ccp_destroy_nvme
  put: terraform
  params:
    <<: *destroy_params
    terraform_source: ccp_src/google-nvme-block-device/
  get_params:
    action: destroy

- &set_failed
  do:
    - task: on_failure_set_failed
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: gcr.io/data-gpdb-public-images/ccp
            tag: "latest"
        inputs:
          - name: ccp_src
          - name: terraform
        run:
          path: 'ccp_src/google/ccp_failed_test.sh'
        params:
          GOOGLE_CREDENTIALS: ((dp/prod/google-service-account-key))
          GOOGLE_PROJECT_ID: ((dp/prod/google-project-id))
          GOOGLE_ZONE: ((dp/prod/google-zone))
          GOOGLE_SERVICE_ACCOUNT: ((dp/prod/google-service-account))
          AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
          AWS_DEFAULT_REGION: ((dp/tf-machine-region))
          BUCKET_PATH: clusters-google/
          BUCKET_NAME: ((dp/tf-bucket-name))

- &terraform_cluster
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      GOOGLE_CREDENTIALS: ((dp/prod/google-service-account-key))
    vars:
      project_id: ((dp/prod/google-project-id))
    storage:
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))
      region_name: ((dp/aws-region))
      # This is not parameterized, on purpose. All tfstates will go to this spot,
      # and different teams will place there clusters' tfstate files under different paths
      bucket: gpdb5-pipeline-dynamic-terraform
      bucket_path: clusters-google/

- &ddboost_params
  DD_SOURCE_HOST: ((dp/prod/datadomain_source_host_gcp))
  DD_USER: ((dp/prod/datadomain_user))
  DD_PW: ((dp/prod/datadomain_password_gcp))
  DD_DEST_HOST: ((dp/prod/datadomain_dest_host_gcp))
  DD_ENCRYPTED_PW: ((dp/prod/encrypted_datadomain_password_gcp))

- &slack_alert
  put: slack-alert
  params:
    text: |
      [gpbackup/$BUILD_JOB_NAME] failed:
      https://prod.ci.gpdb.pivotal.io/teams/main/pipelines/gpbackup/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

resource_types:
- name: terraform
  type: registry-image
  source:
    repository: ljfranklin/terraform-resource
    # We fixed this version after v0.12.1 had a breaking change
    tag: 0.11.14

- name: slack-notification
  type: registry-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: gcs
  type: registry-image
  source:
    repository: frodenas/gcs-resource

- name: pivnet
  type: registry-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final


resources:
##### Docker Images #####
- name: centos7-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb5-centos7-build-test
    tag: latest

- name: centos7-gpdb7-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb7-centos7-test
    tag: latest

- name: centos6-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb5-centos6-build-test
    tag: latest

- name: sles11-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-private-images/gpdb5-sles11-build-test
    tag: latest
    username: _json_key
    password: ((data-gpdb-private-images-container-registry-readonly-service-account-key))

- name: ubuntu-debian-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb6-ubuntu18.04-build
    tag: latest

- name: ubuntu-debian-test-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb6-ubuntu18.04-test
    tag: latest

##### Other Resources #####

# TODO mark these as src with name change
- name: gpbackup
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpbackup
    branch: ((gpbackup-git-branch))
    tag_filter: 1.*

- name: gpbackup_s3_plugin
  type: git
  icon: github-circle
  source:
    branch: ((dp/prod/gpbackup-s3-plugin-git-branch))
    uri: https://github.com/greenplum-db/gpbackup-s3-plugin
    tag_filter: 1.*

- name: gpbackup_ddboost_plugin
  type: git
  icon: github-circle
  source:
    branch: ((dp/gpbackup-ddboost-plugin-branch)) 
    private_key: ((dp/gpbackup-ddboost-plugin-remote-key))
    uri: ((dp/gpbackup-ddboost-plugin-git-remote))
    tag_filter: 1.*

- name: gpbackup_manager_src
  type: git
  icon: github-circle
  source:
    branch: main
    private_key: ((dp/prod/gp-backup-manager-remote-deploy-key))
    uri: ((dp/gp-backup-manager-git-remote))
    tag_filter: 1.*

- name: gpdb5_src
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpdb
    branch: 5X_STABLE
    tag_filter: 5.*


- name: gpdb6_src
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpdb
    branch: 6X_STABLE
    tag_filter: 6.*

- name: bin_gpdb_5x_sles11
  type: s3
  icon: amazon
  source:
    bucket: gpdb5-stable-concourse-builds
    access_key_id: ((aws-bucket-access-key-id))
    region_name: ((dp/aws-region))
    secret_access_key: ((aws-bucket-secret-access-key))
    versioned_file: bin_gpdb_sles11/gpdb_branch_5X_STABLE/icw_green/bin_gpdb.tar.gz

- name: bin_gpdb_6x_stable_ubuntu
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/gpdb6/server-rc-(.*)-ubuntu18.04_x86_64((dp/prod/rc-build-type-gcs)).tar.gz


- name: gpdb_main_src
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpdb
    branch: main

- name: bin_gpdb_main_centos7
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/master/server-rc-(.*)-rhel7_x86_64((dp/prod/rc-build-type-gcs)).tar.gz

# These binaries are used for backwards-compatibility testing only
- name: bin_gpbackup_1.0.0_and_1.7.1
  type: s3
  icon: amazon
  source:
    bucket: gpbackup-dependencies
    versioned_file: gpbackup_bins_1.0.0_and_1.7.1.tar.gz
    region_name: us-west-2
    access_key_id: ((aws-bucket-access-key-id))
    secret_access_key: ((aws-bucket-secret-access-key))

# This is specifically for sles11 images because it cannot connect to github due to TLS issues
- name: libyaml-0.1.7
  type: s3
  icon: amazon
  source:
    bucket: gpbackup-dependencies
    versioned_file: gpbackup-dependencies/libyaml-0.1.7.tar.gz
    region_name: us-west-2
    access_key_id: ((aws-bucket-access-key-id))
    secret_access_key: ((aws-bucket-secret-access-key))

- name: pgcrypto43
  type: s3
  icon: amazon
  source:
    bucket: pgcrypto43
    access_key_id: ((aws-bucket-access-key-id))
    region_name: ((dp/aws-region))
    secret_access_key: ((aws-bucket-secret-access-key))
    regexp: pgcrypto-ossv1.1_pv(.*)_gpdb4.3orca-rhel5-x86_64.gppkg


- name: dummy_seclabel_linux_gpdb6
  type: gcs
  icon: google
  source:
    bucket: dummy_seclabel_gpdb_linux
    json_key: ((dp/prod/gcp_svc_acct_key))
    regexp: dummy_seclabel_gpdb6-v(.*).so

- name: dummy_seclabel_linux_main
  type: gcs
  icon: google
  source:
    bucket: dummy_seclabel_gpdb_linux
    json_key: ((dp/prod/gcp_svc_acct_key))
    regexp: dummy_seclabel_gpdb7-v(.*).so

- name: bin_gpdb_5x_stable_centos6
  type: s3
  icon: amazon
  source:
    bucket: gpdb-stable-concourse-builds
    versioned_file: release_candidates/bin_gpdb_centos6/gpdb5/bin_gpdb.tar.gz
    region_name: us-west-2
    access_key_id: ((aws-bucket-access-key-id))
    secret_access_key: ((aws-bucket-secret-access-key))

- name: bin_gpdb_5x_stable_centos7
  type: s3
  icon: amazon
  source:
    bucket: gpdb-stable-concourse-builds
    versioned_file: release_candidates/bin_gpdb_centos7/gpdb5/bin_gpdb.tar.gz
    region_name: us-west-2
    access_key_id: ((aws-bucket-access-key-id))
    secret_access_key: ((aws-bucket-secret-access-key))

- name: bin_gpdb_6x_stable_centos6
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/gpdb6/server-rc-(.*)-rhel6_x86_64((dp/prod/rc-build-type-gcs)).tar.gz

- name: bin_gpdb_6x_stable_centos7
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/gpdb6/server-rc-(.*)-rhel7_x86_64((dp/prod/rc-build-type-gcs)).tar.gz

- name: bin_gpdb_43_stable
  type: s3
  icon: amazon
  source:
    bucket: gpdb-4.3-stable-concourse
    versioned_file: bin_gpdb_centos/bin_gpdb.tar.gz
    region_name: us-west-2
    access_key_id: ((gpdb4-bucket-access-key-id))
    secret_access_key: ((gpdb4-bucket-secret-access-key))

- name: ccp_src
  type: git
  icon: github-circle
  source:
    branch: ((dp/ccp-git-branch))
    private_key: ((gp-concourse-cluster-provisioner-git-key))
    uri: ((dp/ccp-git-remote))
    tag: v2.6.0

- name: terraform
  <<: *terraform_cluster

- name: terraform.d
  type: s3
  icon: amazon
  source:
    access_key_id: ((aws-bucket-access-key-id))
    bucket: ccp-terraform-provider-plugins
    region_name: ((dp/aws-region))
    secret_access_key: ((aws-bucket-secret-access-key))
    versioned_file: plugin-cache-all.tgz


- name: boostfs_installer
  type: s3
  icon: amazon
  source:
    access_key_id: ((gpdb4-bucket-access-key-id))
    bucket: ((dp/bucket))
    region_name: ((dp/aws-region))
    secret_access_key: ((gpdb4-bucket-secret-access-key))
    versioned_file: DDBoostFS-1.1.0.1-565598.rhel.x86_64.rpm

- name: slack-alert
  type: slack-notification
  source:
    url: ((dp/webhook_url))
    disable: ((dp/prod/disable_slack_alert))

- name: pivnet_release_cache
  type: s3
  icon: amazon
  source:
    access_key_id: ((aws-bucket-access-key-id))
    bucket: ((dp/prod/pivnet_bucket_name))
    region_name: ((dp/aws-region))
    secret_access_key: ((aws-bucket-secret-access-key))
    regexp: pivnet_release_version/v-(.*)

- name: github_release_components
  type: s3
  icon: amazon
  source:
    access_key_id: ((aws-bucket-access-key-id))
    bucket: ((dp/prod/gpdb-stable-bucket-name))
    region_name: ((dp/aws-region))
    secret_access_key: ((aws-bucket-secret-access-key))
    regexp: components/gpbackup/intermediates/gpbackup-(.*).tar.gz

- name: github_release_components_rc
  type: s3
  icon: amazon
  source:
    access_key_id: ((aws-bucket-access-key-id))
    bucket: ((dp/prod/gpdb-stable-bucket-name))
    region_name: ((dp/aws-region))
    secret_access_key: ((aws-bucket-secret-access-key))
    regexp: components/gpbackup/gpbackup-(.*).tar.gz

- name: gppkgs_rc
  type: s3
  icon: amazon
  source:
    access_key_id: ((aws-bucket-access-key-id))
    bucket: ((dp/prod/gpdb-stable-bucket-name))
    region_name: ((dp/aws-region))
    secret_access_key: ((aws-bucket-secret-access-key))
    versioned_file: gppkgs/gpbackup-gppkgs.tar.gz

- name: gpbackup-go-components
  type: s3
  icon: amazon
  source:
    access_key_id: ((aws-bucket-access-key-id))
    bucket: ((dp/prod/gpdb-stable-bucket-name))
    region_name: ((dp/aws-region))
    secret_access_key: ((aws-bucket-secret-access-key))
    versioned_file: gpbackup-go-components/go_components.tar.gz

- name: gppkgs
  type: s3
  icon: amazon
  source:
    access_key_id: ((aws-bucket-access-key-id))
    bucket: ((dp/prod/gpdb-stable-bucket-name))
    region_name: ((dp/aws-region))
    secret_access_key: ((aws-bucket-secret-access-key))
    versioned_file: gppkgs/intermediates_release/gpbackup-gppkgs.tar.gz

- name: gpbackup_github_release
  type: github-release
  source:
    owner: greenplum-db
    repository: gpbackup
    access_token: ((dp/prod/gpbackup-git-access-token))
    release: true

- name: pivnet-upload
  type: pivnet
  source:
    api_token: ((dp/prod/pivnet_api_token))
    product_slug: pivotal-gpdb-backup-restore
    endpoint: "https://network.tanzu.vmware.com"
    bucket: gpbackup-pivotal-network
    access_key_id: ((dp/prod/pivnet_bucket_access_key_id))
    secret_access_key: ((dp/prod/pivnet_bucket_secret_access_key))
    region: us-west-2
    copy_metadata: true
    sort_by: semver

- name: gpbackup-release-license
  type: gcs
  icon: google
  source:
    bucket: gpbackup-release-licenses
    json_key: ((dp/prod/gcp_svc_acct_key))
    regexp: open_source_license_VMware_Tanzu_Greenplum_Backup_and_Restore_(.*)_.*.txt

jobs:
- name: build_binaries
  plan:
  - in_parallel:
    - get: gpbackup_s3_plugin
    - get: gpbackup_manager_src
    - get: gpbackup
    - get: pivnet_release_cache
  - task: build-go-binaries
    file: gpbackup/ci/tasks/build-go-binaries.yml
  - put: gpbackup-go-components
    params:
      file: go_components/go_components.tar.gz

- name: build_gppkgs
  plan:
  - in_parallel:
    - get: centos6-image
    - get: sles11-image
    - get: bin_gpdb_5x_sles11
    - get: libyaml-0.1.7
    - get: ubuntu-debian-image
    - get: ubuntu-debian-test-image
    - get: bin_gpdb_6x_stable_ubuntu
    - get: gpdb_src
      resource: gpdb6_src
    - get: gpbackup-go-components
      trigger: true
      passed: [build_binaries]
    - get: bin_gpdb_6x_stable_centos6
    - get: gpbackup
      passed: [build_binaries]
    - get: gpbackup_ddboost_plugin
    - get: pivnet_release_cache
    - get: gpbackup-release-license
  - task: gpbackup-tools-versions
    image: centos6-image
    file: gpbackup/ci/tasks/gpbackup-tools-versions.yml
  - in_parallel:
    - do: # RHEL
      - task: build-ddboost-RHEL
        image: centos6-image
        file: gpbackup/ci/tasks/build-ddboost.yml
        input_mapping:
          bin_gpdb: bin_gpdb_6x_stable_centos6
      - task: tar-binaries-RHEL
        image: centos6-image
        file: gpbackup/ci/tasks/build-os-tars.yml
      - task: build_gppkgs-RHEL
        image: centos6-image
        file: gpbackup/ci/tasks/build-gppkg.yml
        input_mapping:
          bin_gpdb: bin_gpdb_6x_stable_centos6
        output_mapping:
          gppkgs: rhel-gppkg
        params:
          OS: RHEL
    - do: # SLES
      - task: build-ddboost-SLES
        image: sles11-image
        file: gpbackup/ci/tasks/build-ddboost.yml
        input_mapping:
          bin_gpdb: bin_gpdb_5x_sles11
      - task: tar-binaries-SLES
        image: sles11-image
        file: gpbackup/ci/tasks/build-os-tars.yml
      - task: build_gppkgs-SLES
        # We need to use centos image for doing rpm-build for sles
        image: centos6-image
        file: gpbackup/ci/tasks/build-gppkg.yml
        input_mapping:
          bin_gpdb: bin_gpdb_5x_sles11
        output_mapping:
          gppkgs: sles-gppkg
        params:
          OS: SLES
    - do: # ubuntu
        - task: build-ddboost-ubuntu
          image: ubuntu-debian-image
          file: gpbackup/ci/tasks/build-ddboost.yml
          input_mapping:
            bin_gpdb: bin_gpdb_6x_stable_ubuntu
        - task: tar-binaries-ubuntu
          image: ubuntu-debian-image
          file: gpbackup/ci/tasks/build-os-tars.yml
        - task: build_gppkgs-ubuntu
          image: ubuntu-debian-test-image
          file: gpbackup/ci/tasks/build-gppkg.yml
          input_mapping:
            bin_gpdb: bin_gpdb_6x_stable_ubuntu
          output_mapping:
            gppkgs: ubuntu-gppkg
          params:
            OS: ubuntu
  - task: tar-gppkgs
    image: centos6-image
    file: gpbackup/ci/tasks/tar-gppkgs.yml
  - put: gppkgs
    params:
      file: gppkgs/gpbackup-gppkgs.tar.gz
  - put: github_release_components
    params:
      file: gpbackup_tar/gpbackup-*.tar.gz

- name: s3_plugin_tests
  plan:
  - in_parallel:
    - get: centos7-image
    - get: gpbackup_s3_plugin
      passed: [build_binaries]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_src
      resource: gpdb5_src
    - get: gpdb_binary
      resource: bin_gpdb_5x_stable_centos6
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - do:
      - get: ccp_src
      - get: terraform.d
        params:
          unpack: true
      - put: terraform
        params:
          <<: *ccp_default_params
          vars:
            <<: *ccp_default_vars
            PLATFORM: centos7
      - task: gen_cluster
        file: ccp_src/ci/tasks/gen_cluster.yml
        params:
          <<: *ccp_gen_cluster_default_params
          PLATFORM: centos7
      - task: gpinitsystem
        file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    image: centos7-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: run_tests
    image: centos7-image
    file: gpbackup/ci/tasks/s3-plugin-tests.yml
    params:
      REGION: us-west-2
      AWS_ACCESS_KEY_ID: ((aws-bucket-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((aws-bucket-secret-access-key))
      BUCKET: ((dp/prod/gpbackup-s3-plugin-test-bucket))
  on_success:
    <<: *ccp_destroy
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

- name: s3_plugin_perf
  plan:
  - in_parallel:
    - get: centos7-image
    - get: gpbackup_s3_plugin
      passed: [build_binaries]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_src
      resource: gpdb6_src
    - get: gpdb_binary
      resource: bin_gpdb_6x_stable_centos6
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - do:
      - get: ccp_src
      - get: terraform.d
        params:
          unpack: true
      - put: terraform
        params:
          <<: *ccp_default_params
          terraform_source: ccp_src/google-nvme-block-device/
          vars:
            PLATFORM: centos6
            number_of_nodes: 4
            segments_per_host: 4
            instance_type: n1-standard-8
            ccp_reap_minutes: 360
      - task: gen_cluster
        file: ccp_src/ci/tasks/gen_cluster.yml
        params:
          <<: *ccp_gen_cluster_default_params
      - task: gpinitsystem
        file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    image: centos7-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: run_perf
    image: centos7-image
    file: gpbackup/ci/tasks/s3-plugin-perf.yml
    params:
      REGION: us-west-2
      AWS_ACCESS_KEY_ID: ((aws-bucket-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((aws-bucket-secret-access-key))
      BUCKET: ((dp/prod/gpbackup-s3-plugin-test-bucket))
      SCALE_FACTOR: 1
  on_success:
    <<: *ccp_destroy
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

- name: gpbackup-manager-tests
  plan:
  - in_parallel:
    - get: centos7-image
    - get: gpbackup_manager_src
      passed: [build_binaries]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb
      resource: bin_gpdb_6x_stable_centos6
    - get: gpdb_src
      resource: gpdb6_src
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - task: run_tests
    image: centos7-image
    file: gpbackup/ci/tasks/test-gpbackup-manager.yml

- name: ddboost_plugin_and_boostfs_tests_43
  plan:
  - in_parallel:
    - get: gpdb_src
      resource: gpdb5_src
    - get: gpdb_binary
      resource: bin_gpdb_43_stable
    - get: pgcrypto43
    - get: centos6-image
    - get: gpbackup_ddboost_plugin
      passed: [build_gppkgs]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: boostfs_installer
    - get: ccp_src
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        instance_type: n1-standard-8
        PLATFORM: centos6
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos6
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    file: gpbackup/ci/tasks/setup-centos-env.yml
    image: centos6-image
  - task: install-boostfs
    file: gpbackup/ci/tasks/boostfs-install.yml
    image: centos6-image
    params:
      <<: *ddboost_params
  - task: run_tests
    image: centos6-image
    file: gpbackup/ci/tasks/ddboost-plugin-tests.yml
    params:
      <<: *ddboost_params
    on_success:
      <<: *ccp_destroy_nvme
  ensure:
    <<: *set_failed

- name: ddboost_plugin_and_boostfs_tests_5x
  plan:
  - in_parallel:
    - get: gpdb_src
      resource: gpdb5_src
    - get: gpdb_binary
      resource: bin_gpdb_5x_stable_centos6
    - get: centos6-image
    - get: gpbackup_ddboost_plugin
      passed: [build_gppkgs]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: boostfs_installer
    - get: ccp_src
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        instance_type: n1-standard-8
        PLATFORM: centos6
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos6
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    file: gpbackup/ci/tasks/setup-centos-env.yml
    image: centos6-image
  - task: install-boostfs
    file: gpbackup/ci/tasks/boostfs-install.yml
    image: centos6-image
    params:
      <<: *ddboost_params
  - task: run_tests
    image: centos6-image
    file: gpbackup/ci/tasks/ddboost-plugin-tests.yml
    params:
      <<: *ddboost_params
    on_success:
      <<: *ccp_destroy_nvme
  ensure:
    <<: *set_failed

- name: ddboost_plugin_and_boostfs_tests_6x
  plan:
  - in_parallel:
    - get: gpdb_src
      resource: gpdb6_src
    - get: gpdb_binary
      resource: bin_gpdb_6x_stable_centos6
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_gpdb6
    - get: centos6-image
    - get: gpbackup_ddboost_plugin
      passed: [build_gppkgs]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: boostfs_installer
    - get: ccp_src
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        instance_type: n1-standard-8
        PLATFORM: centos6
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos6
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    file: gpbackup/ci/tasks/setup-centos-env.yml
    image: centos6-image
  - task: install-boostfs
    file: gpbackup/ci/tasks/boostfs-install.yml
    image: centos6-image
    params:
      <<: *ddboost_params
  - task: run_tests
    image: centos6-image
    file: gpbackup/ci/tasks/ddboost-plugin-tests.yml
    params:
      <<: *ddboost_params
    on_success:
      <<: *ccp_destroy_nvme
  ensure:
    <<: *set_failed

- name: ddboost_plugin_perf
  plan:
  - in_parallel:
    - get: centos6-image
    - get: gpbackup_ddboost_plugin
      passed: [build_gppkgs]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: boostfs_installer
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb6_src
    - get: gpdb_binary
      resource: bin_gpdb_6x_stable_centos6
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google-nvme-block-device/
      vars:
        instance_type: n1-standard-8
        number_of_nodes: 4
        segments_per_host: 4
        PLATFORM: centos6
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos6
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    image: centos6-image
    file: gpbackup/ci/tasks/setup-centos-env.yml
  - task: run_perf
    image: centos6-image
    file: gpbackup/ci/tasks/ddboost-plugin-perf.yml
    params:
      <<: *ddboost_params
      REGION: us-west-2
      AWS_ACCESS_KEY_ID: ((aws-bucket-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((aws-bucket-secret-access-key))
      BUCKET: ((dp/prod/gpbackup-s3-plugin-test-bucket))
      SCALE_FACTOR: 1
    on_success:
      <<: *ccp_destroy_nvme
  ensure:
    <<: *set_failed

- name: GPDB5-sles11
  plan:
  - in_parallel:
    - get: sles11-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_5x_sles11
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb5_src
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        PLATFORM: sles12
        default_image_user: root
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: sles12
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: integration-tests
    image: sles11-image
    file: gpbackup/ci/tasks/gpbackup-tests.yml
    params:
      OS: SLES
  on_success:
    <<: *ccp_destroy
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

- name: GPDB6-ubuntu
  plan:
  - in_parallel:
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_6x_stable_ubuntu
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb6_src
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_gpdb6
    - get: ubuntu-debian-test-image
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        PLATFORM: ubuntu18.04
        default_image_user: root
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: ubuntu
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: integration-tests
    image: ubuntu-debian-test-image
    file: gpbackup/ci/tasks/gpbackup-tests.yml
    params:
      OS: ubuntu
      default_ami_user: ubuntu
  on_success:
    <<: *ccp_destroy
  on_failure:
    *slack_alert
  ensure:
    <<: *set_failed

- name: GPDB7
  plan:
  - in_parallel:
    - get: centos7-gpdb7-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb_main_centos7
      trigger: true
    - get: gpdb_src
      resource: gpdb_main_src
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_main
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - task: run-tests-locally-centos7
    image: centos7-gpdb7-image
    file: gpbackup/ci/tasks/test-on-local-cluster.yml
    params:
      REQUIRES_DUMMY_SEC: true
    input_mapping:
      bin_gpdb: bin_gpdb_main_centos7
  on_failure:
    *slack_alert

- name: GPDB4.3
  plan:
  - in_parallel:
    - get: centos6-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb
      resource: bin_gpdb_43_stable
    - get: gpdb_src
      resource: gpdb5_src
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
  - task: run-tests-locally-centos6
    image: centos6-image
    file: gpbackup/ci/tasks/test-on-local-cluster.yml
  on_failure:
    *slack_alert

- name: GPDB5
  plan:
  - in_parallel:
    - get: centos6-image
    - get: centos7-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb_5x_stable_centos6
    - get: bin_gpdb_5x_stable_centos7
    - get: gpdb_src
      resource: gpdb5_src
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - in_parallel:
    - task: run-tests-locally-centos6
      image: centos6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      input_mapping:
        bin_gpdb: bin_gpdb_5x_stable_centos6
    - task: run-tests-locally-centos7
      image: centos7-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      input_mapping:
        bin_gpdb: bin_gpdb_5x_stable_centos7
  on_failure:
    *slack_alert

- name: GPDB6
  plan:
  - in_parallel:
    - get: centos6-image
    - get: centos7-image
    - get: ubuntu-debian-test-image
    - get: bin_gpdb_6x_stable_ubuntu
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb_6x_stable_centos6
    - get: bin_gpdb_6x_stable_centos7
    - get: gpdb_src
      resource: gpdb6_src
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_gpdb6
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - in_parallel:
    - task: run-tests-locally-centos6
      image: centos6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
      input_mapping:
        bin_gpdb: bin_gpdb_6x_stable_centos6
    - task: run-tests-locally-centos7
      image: centos7-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
      input_mapping:
        bin_gpdb: bin_gpdb_6x_stable_centos7
    - task: run-tests-locally-ubuntu-debian
      image: ubuntu-debian-test-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        OS: ubuntu
      input_mapping:
        bin_gpdb: bin_gpdb_6x_stable_ubuntu
  on_failure:
    *slack_alert

- name: GPDB6-7-seg-cluster
  plan:
  - in_parallel:
    - get: centos6-image
    - get: centos7-image
    - get: ubuntu-debian-test-image
    - get: bin_gpdb_6x_stable_ubuntu
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb_6x_stable_centos6
    - get: bin_gpdb_6x_stable_centos7
    - get: gpdb_src
      resource: gpdb6_src
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_gpdb6
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - in_parallel:
    - task: run-tests-locally-centos6
      image: centos6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        LOCAL_CLUSTER_SIZE: 7
      input_mapping:
        bin_gpdb: bin_gpdb_6x_stable_centos6
    - task: run-tests-locally-centos7
      image: centos7-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        LOCAL_CLUSTER_SIZE: 7
      input_mapping:
        bin_gpdb: bin_gpdb_6x_stable_centos7
    - task: run-tests-locally-ubuntu-debian
      image: ubuntu-debian-test-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        LOCAL_CLUSTER_SIZE: 7
        OS: ubuntu
      input_mapping:
        bin_gpdb: bin_gpdb_6x_stable_ubuntu
  on_failure:
    *slack_alert

- name: backward-compatibility
  plan:
  - in_parallel:
    - get: centos6-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_5x_stable_centos7
    - get: bin_gpbackup_1.0.0_and_1.7.1
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb5_src
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        PLATFORM: centos7
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos7
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    file: gpbackup/ci/tasks/setup-centos-env.yml
    image: centos6-image
  - task: backup-1.0.0-restore-latest
    image: centos6-image
    file: gpbackup/ci/tasks/all-tests.yml
    params:
      GPBACKUP_VERSION: "1.0.0"
  - task: backup-1.7.1-restore-latest
    image: centos6-image
    file: gpbackup/ci/tasks/all-tests.yml
    params:
      GPBACKUP_VERSION: "1.7.1"
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed



- name: green_gate
  plan:
  - in_parallel:
    - get: github_release_components
      passed: [build_gppkgs]
    - get: gppkgs
      trigger: true
      passed:
        - build_gppkgs
        - GPDB4.3
        - GPDB5
        - GPDB5-sles11
        - GPDB6-ubuntu
        - GPDB6
        - s3_plugin_tests
        - backward-compatibility
        - ddboost_plugin_and_boostfs_tests_43
        - ddboost_plugin_and_boostfs_tests_5x
        - ddboost_plugin_and_boostfs_tests_6x
        - gpbackup-manager-tests
    - get: gpbackup
      passed: [build_gppkgs]
  - in_parallel:
    - put: gppkgs_rc
      params:
        file: gppkgs/gpbackup-gppkgs.tar.gz
    - put: github_release_components_rc
      params:
        file: github_release_components/gpbackup-*.tar.gz

- name: push-to-github
  plan:
  - get: centos6-image
  - get: github_release_components_rc
    passed: [green_gate]
  - task: prepare-for-release
    image: centos6-image
    config:
      platform: linux
      inputs:
        - name: github_release_components_rc
      outputs:
        - name: github_release_components_untarred
      run:
        path: "sh"
        args:
          - -exc
          - |
            set -x
            tar xvzf github_release_components_rc/*.gz -C github_release_components_untarred
            tar xvzf github_release_components_untarred/bin_gpbackup.tar.gz -C github_release_components_untarred
  - put: gpbackup_github_release
    params:
      name: github_release_components_untarred/gpbackup_version
      tag: github_release_components_untarred/gpbackup_version
      globs:
      - github_release_components_untarred/bin/gpbackup
      - github_release_components_untarred/bin/gprestore
      - github_release_components_untarred/bin/gpbackup_helper

- name: push-to-pivnet
  plan:
    - in_parallel:
      - get: gppkgs
        resource: gppkgs_rc
        passed: [green_gate]
      - get: github_release_components_rc
        passed: [green_gate]
      - get: gpbackup
        passed: [green_gate]
      - get: gpbackup-release-license
      - get: pivnet_release_cache
      - get: centos6-image
    - task: update metadata.yml
      image: centos6-image
      file: gpbackup/ci/tasks/update-metadata.yml
    - put: pivnet-upload
      params:
        metadata_file: workspace/metadata.yml
        file_glob: workspace/files-to-upload/*
        s3_filepath_prefix: ((dp/prod/pivnet_s3_filepath_prefix))
    - put: pivnet_release_cache
      params:
        file: workspace/v-*

