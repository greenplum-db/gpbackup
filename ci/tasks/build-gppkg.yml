PLATFORM: linux

image_resource:
  type: docker-image
  source:
    repository: pivotaldata/centos-gpdb-dev
    tag: '6-gcc6.2-llvm3.7'

inputs:
- name: github_release_components
- name: gpbackup
- name: gpdb_src
- name: bin_gpdb
- name: pivnet_release_cache

outputs:
- name: gppkgs

run:
  path: bash
  args:
  - -c
  - |
    set -ex

    sudo yum -y install rpm-build

    # Install gpdb binaries
    mv bin_gpdb/{*.tar.gz,bin_gpdb.tar.gz}
    mkdir -p /usr/local/greenplum-db-devel
    tar -xzf bin_gpdb/bin_gpdb.tar.gz -C /usr/local/greenplum-db-devel

    # Setup gpadmin user
    gpdb_src/concourse/scripts/setup_gpadmin_user.bash centos

    GPBACKUP_VERSION=$(cat github_release_components/gpbackup_version)

    pushd pivnet_release_cache
      PRV_TILE_RELEASE_VERSION="v-${GPBACKUP_VERSION}*"
      if [ -f $PRV_TILE_RELEASE_VERSION ]; then
        # increment the counter if the expected release version has been used before
        COUNT=$(echo $PRV_TILE_RELEASE_VERSION | sed -n "s/v-${GPBACKUP_VERSION}-\([0-9]*\).*/\1/p")
        COUNT=$(($COUNT+1))
      else
        # reset the version count
        COUNT=1
      fi
      # RPM_VERSION is the tile release version with the `-` changed to a `_`
      # because the `-` is reserved in RPM SPEC to denote `%{version}-%{release}`
      RPM_VERSION=${GPBACKUP_VERSION}_${COUNT}
    popd

    # Create gppkgs
    cat <<EOF > gpadmin_cmds.sh
      set -ex

      source /usr/local/greenplum-db-devel/greenplum_path.sh

      # make rpm of gpbackup tools
      ./gpbackup/ci/scripts/gpbackup_tools_rpm.sh $RPM_VERSION github_release_components/bin_gpbackup.tar.gz

      # gpdb 4 gppkgs must have 'orca' in its version because of the version validation done on the name
      ./gpbackup/ci/scripts/gpbackup_gppkg.sh $RPM_VERSION 4.3orca RHEL
      ./gpbackup/ci/scripts/gpbackup_gppkg.sh $RPM_VERSION 5 RHEL
      ./gpbackup/ci/scripts/gpbackup_gppkg.sh $RPM_VERSION 6 RHEL
      ./gpbackup/ci/scripts/gpbackup_gppkg.sh $RPM_VERSION 7 RHEL
    EOF

    chown gpadmin:gpadmin .
    chmod +x gpadmin_cmds.sh
    su gpadmin -c ./gpadmin_cmds.sh

    mv gpbackup_gppkg/* gppkgs/

    cp github_release_components/*_version gppkgs/
    pushd gppkgs
      tar cvfz gpbackup-gppkgs.tar.gz *.gppkg *_version
    popd

    tar tvf gppkgs/gpbackup-gppkgs.tar.gz
