---
groups:
- name: all
  jobs:
  # these are kept as separate jobs to avoid race bugs when they're tasks in the same job
  - build_binaries_rhel6
  - build_binaries_rhel7
  - build_binaries_rhel8
  - build_binaries_rhel9
  - build_gppkgs
  - gpdb5
{% if is_prod or "gpbackup-release" == pipeline_name %}
  - build_binaries_ubuntu
  - ddboost_plugin_and_boostfs_tests_5x
{% endif %}
{% if is_prod and "gpbackup-release" != pipeline_name %}
  - scale-5x
  - scale-6x
  - scale-gpdb7
  - s3_plugin_perf
  - ddboost_plugin_perf
{% endif %}
  - gpbackup-manager-tests
{% if "gpbackup-release" != pipeline_name %}
{% endif %}
  - gpdb6
  - gpdb6-7-seg-cluster
  - gpdb7
  - s3_plugin_tests
  - backward-compatibility
  - ddboost_plugin_and_boostfs_tests_6x
{% if "gpbackup-release" == pipeline_name %}
  - push-to-github
  - green_gate
  - push-to-pivnet
{% endif %}
{% if "gpbackup-release" != pipeline_name %}
  - final_gate
{% endif %}

- name: gpdb5
  jobs:
  - gpdb5
{% if is_prod or "gpbackup-release" == pipeline_name %}
  - ddboost_plugin_and_boostfs_tests_5x
{% endif %}
{% if is_prod and "gpbackup-release" != pipeline_name %}
  - scale-5x
{% endif %}
  - s3_plugin_tests
  - backward-compatibility

- name: gpdb6
  jobs:
  - gpdb6
  - gpdb6-7-seg-cluster
{% if is_prod and "gpbackup-release" != pipeline_name %}
  - scale-6x
  - s3_plugin_perf
  - ddboost_plugin_perf
{% endif %}
  - ddboost_plugin_and_boostfs_tests_6x

- name: gpdb7
  jobs:
  - gpdb7
{% if is_prod and "gpbackup-release" != pipeline_name %}
  - scale-gpdb7
{% endif %}

{% if is_prod and "gpbackup-release" != pipeline_name %}
- name: scale
  jobs:
  - scale-5x
  - scale-6x
  - scale-gpdb7
  - s3_plugin_perf
  - ddboost_plugin_perf
{% endif %}

- name: plugins
  jobs:
  - s3_plugin_tests
  - ddboost_plugin_and_boostfs_tests_6x
{% if is_prod and "gpbackup-release" != pipeline_name %}
  - ddboost_plugin_and_boostfs_tests_5x
  - s3_plugin_perf
  - ddboost_plugin_perf
{% endif %}

{% if "gpbackup-release" == pipeline_name %}
- name: packaging_and_release
  jobs:
  - build_binaries_rhel6
  - build_binaries_rhel7
  - build_binaries_rhel8
  - build_binaries_rhel9
  - build_binaries_ubuntu
  - push-to-github
  - green_gate
  - push-to-pivnet
{% endif %}

##### Anchors #####
anchors:
- &ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  plugin_dir: ../../terraform.d/plugin-cache/linux_amd64
  terraform_source: ccp_src/google-nvme-block-device/

- &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
  AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
  AWS_DEFAULT_REGION: ((dp/aws-region))
  BUCKET_PATH: clusters-google/
  BUCKET_NAME: ((dp/tf-bucket-name))
  CLOUD_PROVIDER: google

- &destroy_params
  action: destroy
  plugin_dir: ../../terraform.d/plugin-cache/linux_amd64
  terraform_source: ccp_src/google/
  env_name_file: terraform/name
  vars:
    aws_instance-node-instance_type: t2.micro #t2.micro is ignored in destroy, but aws_instance-node-instance_is required.
    aws_ebs_volume_type: standard

- &ccp_destroy
  put: terraform
  params:
    <<: *destroy_params
  get_params:
    action: destroy

- &ccp_destroy_nvme
  put: terraform
  params:
    <<: *destroy_params
    terraform_source: ccp_src/google-nvme-block-device/
  get_params:
    action: destroy

- &set_failed
  do:
    - task: on_failure_set_failed
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: gcr.io/data-gpdb-public-images/ccp
            tag: "latest"
        inputs:
          - name: ccp_src
          - name: terraform
        run:
          path: 'ccp_src/google/ccp_failed_test.sh'
        params:
          GOOGLE_CREDENTIALS: ((dp/dev/google-service-account-key))
          GOOGLE_PROJECT_ID: ((dp/dev/google-project-id))
          GOOGLE_ZONE: ((dp/dev/google-zone))
          GOOGLE_SERVICE_ACCOUNT: ((dp/dev/google-service-account))
          AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
          AWS_DEFAULT_REGION: ((dp/tf-machine-region))
          BUCKET_PATH: clusters-google/
          BUCKET_NAME: ((dp/tf-bucket-name))

- &terraform_cluster
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      GOOGLE_CREDENTIALS: ((dp/dev/google-service-account-key))
    vars:
      project_id: ((dp/dev/google-project-id))
    storage:
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))
      region_name: ((dp/aws-region))
      # This is not parameterized, on purpose. All tfstates will go to this spot,
      # and different teams will place there clusters' tfstate files under different paths
      bucket: gpdb5-pipeline-dynamic-terraform
      bucket_path: clusters-google/

- &ddboost_params
  DD_SOURCE_HOST: ((dp/dev/datadomain_711_source_host_gcp))
  DD_USER: ((dp/prod/datadomain_user))
  DD_PW: ((dp/prod/datadomain_711_password_gcp))
  DD_DEST_HOST: ((dp/dev/datadomain_711_dest_host_gcp))
  DD_ENCRYPTED_PW: ((dp/prod/encrypted_datadomain_711_password_gcp))

{% if should_alert and (is_prod or "gpbackup-release" == pipeline_name) %}
- &slack_alert
  put: slack-alert
  params:
    text: |
      [gpbackup/$BUILD_JOB_NAME] failed:
      $ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
{% endif %}

resource_types:
- name: terraform
  type: registry-image
  source:
    repository: ljfranklin/terraform-resource
    # We fixed this version after v0.12.1 had a breaking change
    tag: 0.11.14

- name: slack-notification
  type: registry-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: gcs
  type: registry-image
  source:
    repository: frodenas/gcs-resource

- name: pivnet
  type: registry-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

##############################################
resources:
##### Docker Images #####
- name: centos6-gpdb5-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb5-centos6-build-test
    tag: latest

- name: centos7-gpdb5-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb5-centos7-build-test
    tag: latest

- name: centos7-gpdb6-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb6-centos7-test-golang
    tag: latest

- name: rocky8-gpdb6-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb6-rocky8-test
    tag: latest

- name: rocky8-gpdb7-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb7-rocky8-test
    tag: latest

- name: rocky9-gpdb6-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb6-rocky9-test
    tag: latest

- name: rocky9-gpdb7-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb7-rocky9-test
    tag: latest

{% if is_prod or "gpbackup-release" == pipeline_name %}
- name: ubuntu20.04-gpdb6-image
  type: registry-image
  source:
    repository: gcr.io/data-gpdb-public-images/gpdb6-ubuntu20.04-test
    tag: latest
{% endif %}

##############################################

##### Source Code  #####
# TODO mark these as src with name change
- name: gpbackup
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpbackup
    branch: ((gpbackup-git-branch))
{% if "gpbackup-release" == pipeline_name %}
    tag_filter: 1.*
{% endif %}

- name: gpbackup_s3_plugin
  type: git
  icon: github-circle
  source:
    branch: main
    uri: https://github.com/greenplum-db/gpbackup-s3-plugin
{% if "gpbackup-release" == pipeline_name %}
    tag_filter: 1.*
{% endif %}

- name: gpbackup_ddboost_plugin
  type: git
  icon: github-circle
  source:
    branch: main
    private_key: ((dp/gpbackup-ddboost-plugin-remote-key))
    uri: ((dp/gpbackup-ddboost-plugin-git-remote))
{% if "gpbackup-release" == pipeline_name %}
    tag_filter: 1.*
{% endif %}

- name: gpbackup_manager_src
  type: git
  icon: github-circle
  source:
    branch: main
    private_key: ((dp/$$DEV_PROD$$/gp-backup-manager-remote-deploy-key))
    uri: ((dp/gp-backup-manager-git-remote))
{% if "gpbackup-release" == pipeline_name %}
    tag_filter: 1.*
{% endif %}

- name: gpdb5_src
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpdb
    branch: 5X_STABLE
{% if "gpbackup-release" == pipeline_name %}
    tag_filter: 5.*
{% endif %}

- name: gpdb6_src
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpdb
    branch: 6X_STABLE
{% if "gpbackup-release" == pipeline_name %}
    tag_filter: 6.*
{% endif %}

- name: gpdb_main_src
  type: git
  icon: github-circle
  source:
    uri: https://github.com/greenplum-db/gpdb
    branch: main

- name: ccp_src
  type: git
  icon: github-circle
  source:
    branch: ((dp/ccp-git-branch))
    private_key: ((gp-concourse-cluster-provisioner-git-key))
    uri: ((dp/ccp-git-remote))

##############################################

##### Binaries #####
{% if is_prod or "gpbackup-release" == pipeline_name %}
- name: bin_gpdb_6x_ubuntu
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/gpdb6/server-rc-(.*)-ubuntu20.04_x86_64.debug.tar.gz
{% endif %}

- name: bin_gpdb_5x_centos6
  type: s3
  icon: amazon
  source:
    bucket: ((dp/prod/gpdb-stable-bucket-name))
    versioned_file: release_candidates/bin_gpdb_centos6/gpdb5/bin_gpdb.tar.gz
    region_name: us-west-2
    access_key_id: ((aws-bucket-access-key-id))
    secret_access_key: ((aws-bucket-secret-access-key))

- name: bin_gpdb_5x_centos7
  type: s3
  icon: amazon
  source:
    bucket: ((dp/prod/gpdb-stable-bucket-name))
    versioned_file: release_candidates/bin_gpdb_centos7/gpdb5/bin_gpdb.tar.gz
    region_name: us-west-2
    access_key_id: ((aws-bucket-access-key-id))
    secret_access_key: ((aws-bucket-secret-access-key))

- name: bin_gpdb_6x_centos7
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/gpdb6/server-rc-(.*)-rhel7_x86_64.tar.gz

- name: bin_gpdb_6x_rhel8
  type: gcs
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/gpdb6/server-rc-(.*)-rhel8_x86_64.tar.gz

- name: bin_gpdb_6x_rhel9
  type: gcs
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/gpdb6/server-rc-(.*)-rhel9_x86_64.debug.tar.gz

- name: bin_gpdb_7x_rhel8
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/main/server-rc-(.*)-el8_x86_64.tar.gz

- name: bin_gpdb_7x_rhel9
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: server/published/main/server-rc-(.*)-el9_x86_64.debug.tar.gz

# These binaries are used for backwards-compatibility testing only
- name: bin_gpbackup_1.0.0_and_1.7.1
  type: s3
  icon: amazon
  source:
    bucket: gpbackup-dependencies
    versioned_file: gpbackup_bins_1.0.0_and_1.7.1.tar.gz
    region_name: us-west-2
    access_key_id: ((aws-bucket-access-key-id))
    secret_access_key: ((aws-bucket-secret-access-key))

##############################################

##### Other Resources #####
{% if (nightly_trigger and "gpbackup-release" != pipeline_name) %}
- name: nightly-trigger
  type: time
  source:
    location: America/Los_Angeles
    days: [Sunday, Monday, Tuesday, Wednesday, Thursday, Friday]
    start: 6:00 AM
    stop: 7:00 AM
{% endif %}

- name: dummy_seclabel_linux_gpdb6
  type: gcs
  icon: google
  source:
    bucket: dummy_seclabel_gpdb_linux
    json_key: ((dp/dev/gcp_svc_acct_key))
    regexp: dummy_seclabel_gpdb6-v(.*).so

- name: dummy_seclabel_linux_main
  type: gcs
  icon: google
  source:
    bucket: dummy_seclabel_gpdb_linux
    json_key: ((dp/dev/gcp_svc_acct_key))
    regexp: dummy_seclabel_gpdb7-v(.*).so

# used for centos6 since the OS is EOL and can't download
- name: libyaml-0.1.7
  type: s3
  icon: amazon
  source:
    bucket: gpbackup-dependencies
    versioned_file: gpbackup-dependencies/libyaml-0.1.7.tar.gz
    region_name: us-west-2
    access_key_id: ((aws-bucket-access-key-id))
    secret_access_key: ((aws-bucket-secret-access-key))

- name: terraform
  <<: *terraform_cluster

- name: terraform.d
  type: s3
  icon: amazon
  source:
    access_key_id: ((aws-bucket-access-key-id))
    bucket: ccp-terraform-provider-plugins
    region_name: ((dp/aws-region))
    secret_access_key: ((aws-bucket-secret-access-key))
    versioned_file: plugin-cache-all.tgz

{% if is_prod and "gpbackup-release" != pipeline_name %}
- name: scale_schema
  type: s3
  icon: amazon
  source:
    access_key_id: ((gpdb4-bucket-access-key-id))
    bucket: ((dp/bucket))
    region_name: ((dp/aws-region))
    secret_access_key: ((gpdb4-bucket-secret-access-key))
    versioned_file: scale-schemas/scale_db1.tgz
{% endif %}

- name: boostfs_installer
  type: s3
  icon: amazon
  source:
    access_key_id: ((gpdb4-bucket-access-key-id))
    bucket: ((dp/bucket))
    region_name: ((dp/aws-region))
    secret_access_key: ((gpdb4-bucket-secret-access-key))
    versioned_file: DDBoostFS-1.1.0.1-565598.rhel.x86_64.rpm

{% if should_alert and (is_prod or "gpbackup-release" == pipeline_name) %}
- name: slack-alert
  type: slack-notification
  source:
    url: ((dp/webhook_url))
    disable: ((dp/$$DEV_PROD$$/disable_slack_alert))
{% endif %}

- name: pivnet_release_cache
  type: s3
  icon: amazon
  source:
    access_key_id: ((aws-bucket-access-key-id))
    bucket: ((dp/$$DEV_PROD$$/pivnet_bucket_name))
    region_name: ((dp/aws-region))
    secret_access_key: ((aws-bucket-secret-access-key))
    regexp: pivnet_release_version/v-(.*)

{% if "gpbackup-release" == pipeline_name %}
- name: release_components_rhel6
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    regexp: gpbackup/intermediates/rhel6/gpbackup-(.*).tar.gz

- name: release_components_rhel7
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    regexp: gpbackup/intermediates/rhel7/gpbackup-(.*).tar.gz

- name: release_components_rhel8
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    regexp: gpbackup/intermediates/rhel8/gpbackup-(.*).tar.gz

- name: release_components_rhel9
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    regexp: gpbackup/intermediates/rhel9/gpbackup-(.*).tar.gz

- name: release_components_ubuntu
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    regexp: gpbackup/intermediates/ubuntu/gpbackup-(.*).tar.gz

- name: gppkgs_release_versioned
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    versioned_file: gpbackup/release-candidates/gpbackup-gppkgs.tar.gz

- name: final_published_file_gppkg_gp7_rhel9
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/rhel9/greenplum_backup_restore-(.*)-gp7-rhel9-x86_64.gppkg

- name: final_published_file_gppkg_gp7_rhel8
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/rhel8/greenplum_backup_restore-(.*)-gp7-rhel8-x86_64.gppkg

- name: final_published_file_gppkg_gp6_rhel9
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/rhel9/greenplum_backup_restore-(.*)-gp6-rhel9-x86_64.gppkg

- name: final_published_file_gppkg_gp6_rhel8
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/rhel8/greenplum_backup_restore-(.*)-gp6-rhel8-x86_64.gppkg

- name: final_published_file_gppkg_gp6_rhel7
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/rhel7/greenplum_backup_restore-(.*)-gp6-rhel7-x86_64.gppkg

- name: final_published_file_gppkg_gp6_rhel6
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/rhel6/greenplum_backup_restore-(.*)-gp6-rhel6-x86_64.gppkg

- name: final_published_file_gppkg_gp6_ubuntu
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/ubuntu/greenplum_backup_restore-(.*)-gp6-ubuntu-amd64.gppkg

- name: final_published_file_gppkg_gp5_rhel7
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/rhel7/greenplum_backup_restore-(.*)-gp5-rhel7-x86_64.gppkg

- name: final_published_file_gppkg_gp5_rhel6
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/rhel6/greenplum_backup_restore-(.*)-gp5-rhel6-x86_64.gppkg

- name: final_published_file_tar_rhel9
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/rhel9/greenplum_backup_restore-(.*)-rhel9.tar.gz

- name: final_published_file_tar_rhel8
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/rhel8/greenplum_backup_restore-(.*)-rhel8.tar.gz

- name: final_published_file_tar_rhel7
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/rhel7/greenplum_backup_restore-(.*)-rhel7.tar.gz

- name: final_published_file_tar_rhel6
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/rhel6/greenplum_backup_restore-(.*)-rhel6.tar.gz

- name: final_published_file_tar_ubuntu
  type: gcs
  icon: google
  source:
    bucket: ((dp/prod/gcs-ci-bucket))
    json_key: ((data-gpdb-ci-service-account-key))
    regexp: gpbackup/published/ubuntu/greenplum_backup_restore-(.*)-ubuntu.tar.gz
{% endif %}

- name: gpbackup-go-components-rhel6
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    versioned_file: gpbackup/intermediates/rhel6/go_components.tar.gz

- name: gpbackup-go-components-rhel7
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    versioned_file: gpbackup/intermediates/rhel7/go_components.tar.gz

- name: gpbackup-go-components-rhel8
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    versioned_file: gpbackup/intermediates/rhel8/go_components.tar.gz

- name: gpbackup-go-components-rhel9
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    versioned_file: gpbackup/intermediates/rhel9/go_components.tar.gz

{% if is_prod or "gpbackup-release" == pipeline_name %}
- name: gpbackup-go-components-ubuntu
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
    versioned_file: gpbackup/intermediates/ubuntu/go_components.tar.gz
{% endif %}

- name: gp-pkg
  type: gcs
  icon: google
  source:
    json_key: ((concourse-gcs-resources-service-account-key))
    bucket: pivotal-gpdb-concourse-resources-prod
    regexp: gppkg/released/gpdb7/gppkg-(.*).tar.gz

- name: gppkgs
  type: gcs
  icon: google
  source:
    bucket: ((dp/dev/gcs-ci-bucket))
    json_key: ((dp/dev/gcp_svc_acct_key))
{% if "gpbackup-release" == pipeline_name %}
    versioned_file: gpbackup/intermediates_release/gpbackup-gppkgs.tar.gz
{% else %}
    versioned_file: gpbackup/intermediates/gpbackup-gppkgs.tar.gz
{% endif %}

{% if "gpbackup-release" == pipeline_name %}
- name: gpbackup_github_release
  type: github-release
  source:
    owner: greenplum-db
    repository: gpbackup
    access_token: ((dp/$$DEV_PROD$$/gpbackup-git-access-token))
    release: true
{% endif %}

{% if "gpbackup-release" == pipeline_name %}
- name: tanzunet_client
  type: github-release
  source:
    owner: pivotal
    repository: gp-tanzunet-client
    access_token: ((dp/prod/gpbackup-git-access-token))
    tag_filter:  v4.8.1
{% endif %}

- name: gpbackup-release-license
  type: gcs
  icon: google
  source:
    bucket: gpbackup-release-licenses
    json_key: ((dp/dev/gcp_svc_acct_key))
    regexp: open_source_license_VMware_Greenplum_Backup_and_Restore_(.*)_.*.txt

##############################################


jobs:
- name: build_binaries_rhel6
  plan:
  - in_parallel:
{% if "gpbackup-release" != pipeline_name %}
    - get: gpbackup_s3_plugin
      trigger: true
    - get: gpbackup_manager_src
      trigger: true
    - get: gpbackup
      trigger: true
{% else %}
    - get: gpbackup_s3_plugin
    - get: gpbackup_manager_src
    - get: gpbackup
{% endif %}
    - get: pivnet_release_cache
    - get: centos6-gpdb5-image
  - task: build-go-binaries-rhel6
    file: gpbackup/ci/tasks/build-go-binaries.yml
    image: centos6-gpdb5-image
    params:
      OS: RHEL6
  - put: gpbackup-go-components-rhel6
    params:
      file: go_components/go_components.tar.gz

- name: build_binaries_rhel7
  plan:
  - in_parallel:
{% if "gpbackup-release" != pipeline_name %}
    - get: gpbackup_s3_plugin
      trigger: true
    - get: gpbackup_manager_src
      trigger: true
    - get: gpbackup
      trigger: true
{% else %}
    - get: gpbackup_s3_plugin
    - get: gpbackup_manager_src
    - get: gpbackup
{% endif %}
    - get: pivnet_release_cache
    - get: centos7-gpdb6-image
  - task: build-go-binaries-rhel7
    file: gpbackup/ci/tasks/build-go-binaries.yml
    image: centos7-gpdb6-image
    params:
      OS: RHEL7
  - put: gpbackup-go-components-rhel7
    params:
      file: go_components/go_components.tar.gz

- name: build_binaries_rhel8
  plan:
  - in_parallel:
{% if "gpbackup-release" != pipeline_name %}
    - get: gpbackup_s3_plugin
      trigger: true
    - get: gpbackup_manager_src
      trigger: true
    - get: gpbackup
      trigger: true
{% else %}
    - get: gpbackup_s3_plugin
    - get: gpbackup_manager_src
    - get: gpbackup
{% endif %}
    - get: pivnet_release_cache
    - get: rocky8-gpdb7-image
  - task: build-go-binaries-rhel8
    file: gpbackup/ci/tasks/build-go-binaries.yml
    image: rocky8-gpdb7-image
    params:
      OS: RHEL8
  - put: gpbackup-go-components-rhel8
    params:
      file: go_components/go_components.tar.gz

- name: build_binaries_rhel9
  plan:
  - in_parallel:
{% if "gpbackup-release" != pipeline_name %}
    - get: gpbackup_s3_plugin
      trigger: true
    - get: gpbackup_manager_src
      trigger: true
    - get: gpbackup
      trigger: true
{% else %}
    - get: gpbackup_s3_plugin
    - get: gpbackup_manager_src
    - get: gpbackup
{% endif %}
    - get: pivnet_release_cache
    - get: rocky9-gpdb7-image
  - task: build-go-binaries-rhel9
    file: gpbackup/ci/tasks/build-go-binaries.yml
    image: rocky9-gpdb7-image
    params:
      OS: RHEL9
  - put: gpbackup-go-components-rhel9
    params:
      file: go_components/go_components.tar.gz

{% if is_prod or "gpbackup-release" == pipeline_name %}
- name: build_binaries_ubuntu
  plan:
  - in_parallel:
{% if "gpbackup-release" != pipeline_name %}
    - get: gpbackup_s3_plugin
      trigger: true
    - get: gpbackup_manager_src
      trigger: true
    - get: gpbackup
      trigger: true
{% else %}
    - get: gpbackup_s3_plugin
    - get: gpbackup_manager_src
    - get: gpbackup
{% endif %}
    - get: pivnet_release_cache
    - get: ubuntu20.04-gpdb6-image
  - task: build-go-binaries-ubuntu
    file: gpbackup/ci/tasks/build-go-binaries.yml
    image: ubuntu20.04-gpdb6-image
    params:
      OS: UBUNTU
  - put: gpbackup-go-components-ubuntu
    params:
      file: go_components/go_components.tar.gz
{% endif %}

- name: build_gppkgs
  plan:
  - in_parallel:
    - get: centos6-gpdb5-image
    - get: centos7-gpdb5-image
    - get: rocky8-gpdb6-image
    - get: rocky9-gpdb6-image
    - get: gpdb_src
      resource: gpdb6_src
    - get: gp-pkg
{% if is_prod or "gpbackup-release" == pipeline_name %}
    - get: ubuntu20.04-gpdb6-image
    - get: bin_gpdb_6x_ubuntu
    - get: gpbackup-go-components-ubuntu
      passed: [build_binaries_ubuntu]
{% endif %}
    - get: gpbackup-go-components-rhel6
      passed: [build_binaries_rhel6]
    - get: gpbackup-go-components-rhel7
      passed: [build_binaries_rhel7]
    - get: gpbackup-go-components-rhel8
      trigger: true
      passed: [build_binaries_rhel8]
    - get: gpbackup-go-components-rhel9
      passed: [ build_binaries_rhel9 ]
    - get: bin_gpdb_5x_centos6
    - get: bin_gpdb_6x_centos7
    - get: bin_gpdb_6x_rhel8
    - get: bin_gpdb_6x_rhel9
    - get: libyaml-0.1.7
    - get: gpbackup
{% if is_prod or "gpbackup-release" == pipeline_name %}
      passed: [build_binaries_rhel6, build_binaries_rhel7, build_binaries_rhel8, build_binaries_rhel9, build_binaries_ubuntu]
{% else %}
      passed: [build_binaries_rhel6, build_binaries_rhel7, build_binaries_rhel8, build_binaries_rhel9]
{% endif %}
    - get: gpbackup_ddboost_plugin
    - get: pivnet_release_cache
    - get: gpbackup-release-license
  - task: gpbackup-tools-versions
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/gpbackup-tools-versions.yml
  - in_parallel:
    - do: # RHEL6
      - task: build-ddboost-rhel6
        image: centos6-gpdb5-image
        file: gpbackup/ci/tasks/build-ddboost.yml
        input_mapping:
          bin_gpdb: bin_gpdb_5x_centos6
      - task: tar-binaries-rhel6
        image: centos6-gpdb5-image
        file: gpbackup/ci/tasks/build-os-tars.yml
        input_mapping:
          gpbackup-go-components: gpbackup-go-components-rhel6
        output_mapping:
          gpbackup_tar: gpbackup_tar_rhel6
      - task: build_gppkgs-rhel6
        image: centos6-gpdb5-image
        file: gpbackup/ci/tasks/build-gppkg.yml
        input_mapping:
          bin_gpdb: bin_gpdb_5x_centos6
          gpbackup_tar: gpbackup_tar_rhel6
        output_mapping:
          gppkgs: rhel6-gppkg
        params:
          OS: RHEL6
    - do: # RHEL7
      - task: build-ddboost-rhel7
        image: centos7-gpdb5-image
        file: gpbackup/ci/tasks/build-ddboost.yml
        input_mapping:
          bin_gpdb: bin_gpdb_6x_centos7
      - task: tar-binaries-rhel7
        image: centos7-gpdb5-image
        file: gpbackup/ci/tasks/build-os-tars.yml
        input_mapping:
          gpbackup-go-components: gpbackup-go-components-rhel7
        output_mapping:
          gpbackup_tar: gpbackup_tar_rhel7
      - task: build_gppkgs-rhel7
        image: centos7-gpdb5-image
        file: gpbackup/ci/tasks/build-gppkg.yml
        input_mapping:
          bin_gpdb: bin_gpdb_6x_centos7
          gpbackup_tar: gpbackup_tar_rhel7
        output_mapping:
          gppkgs: rhel7-gppkg
        params:
          OS: RHEL7
    - do: # RHEL8
      - task: build-ddboost-rhel8
        image: rocky8-gpdb6-image
        file: gpbackup/ci/tasks/build-ddboost.yml
        input_mapping:
          bin_gpdb: bin_gpdb_6x_rhel8
      - task: tar-binaries-rhel8
        image: rocky8-gpdb6-image
        file: gpbackup/ci/tasks/build-os-tars.yml
        input_mapping:
          gpbackup-go-components: gpbackup-go-components-rhel8
        output_mapping:
          gpbackup_tar: gpbackup_tar_rhel8
      - task: build_gppkgs-rhel8
        image: rocky8-gpdb6-image
        file: gpbackup/ci/tasks/build-gppkg.yml
        input_mapping:
          bin_gpdb: bin_gpdb_6x_rhel8
          gpbackup_tar: gpbackup_tar_rhel8
        output_mapping:
          gppkgs: rhel8-gppkg
        params:
          OS: RHEL8
    - do: # RHEL9
        - task: build-ddboost-rhel9
          image: rocky9-gpdb6-image
          file: gpbackup/ci/tasks/build-ddboost.yml
          input_mapping:
            bin_gpdb: bin_gpdb_6x_rhel9
        - task: tar-binaries-rhel9
          image: rocky9-gpdb6-image
          file: gpbackup/ci/tasks/build-os-tars.yml
          input_mapping:
            gpbackup-go-components: gpbackup-go-components-rhel9
          output_mapping:
            gpbackup_tar: gpbackup_tar_rhel9
        - task: build_gppkgs-rhel9
          image: rocky9-gpdb6-image
          file: gpbackup/ci/tasks/build-gppkg.yml
          input_mapping:
            bin_gpdb: bin_gpdb_6x_rhel9
            gpbackup_tar: gpbackup_tar_rhel9
          output_mapping:
            gppkgs: rhel9-gppkg
          params:
            OS: RHEL9
{% if is_prod or "gpbackup-release" == pipeline_name %}
    - do: # ubuntu
        - task: build-ddboost-ubuntu
          image: ubuntu20.04-gpdb6-image
          file: gpbackup/ci/tasks/build-ddboost.yml
          input_mapping:
            bin_gpdb: bin_gpdb_6x_ubuntu
        - task: tar-binaries-ubuntu
          image: ubuntu20.04-gpdb6-image
          file: gpbackup/ci/tasks/build-os-tars.yml
          input_mapping:
            gpbackup-go-components: gpbackup-go-components-ubuntu
          output_mapping:
            gpbackup_tar: gpbackup_tar_ubuntu
        - task: build_gppkgs-ubuntu
          image: ubuntu20.04-gpdb6-image
          file: gpbackup/ci/tasks/build-gppkg.yml
          input_mapping:
            bin_gpdb: bin_gpdb_6x_ubuntu
            gpbackup_tar: gpbackup_tar_ubuntu
          output_mapping:
            gppkgs: ubuntu-gppkg
          params:
            OS: ubuntu
{% endif %}
  - task: tar-gppkgs
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/tar-gppkgs.yml
  - put: gppkgs
    params:
      file: gppkgs/gpbackup-gppkgs.tar.gz
{% if "gpbackup-release" == pipeline_name %}
  - in_parallel:
    - put: release_components_rhel6
      params:
        file: gpbackup_tar_rhel6/gpbackup-*.tar.gz
    - put: release_components_rhel7
      params:
        file: gpbackup_tar_rhel7/gpbackup-*.tar.gz
    - put: release_components_rhel8
      params:
        file: gpbackup_tar_rhel8/gpbackup-*.tar.gz
    - put: release_components_rhel9
      params:
        file: gpbackup_tar_rhel9/gpbackup-*.tar.gz
    - put: release_components_ubuntu
      params:
        file: gpbackup_tar_ubuntu/gpbackup-*.tar.gz
{% endif %}

- name: s3_plugin_tests
  plan:
  - in_parallel:
    - get: rocky8-gpdb6-image
    - get: gpbackup_s3_plugin
{% if is_prod or "gpbackup-release" == pipeline_name %}
      passed: [build_binaries_rhel6, build_binaries_rhel7, build_binaries_rhel8, build_binaries_ubuntu]
{% else %}
      passed: [build_binaries_rhel6, build_binaries_rhel7, build_binaries_rhel8]
{% endif %}
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_src
      resource: gpdb6_src
    - get: gpdb_binary
      resource: bin_gpdb_6x_rhel8
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - do:
      - get: ccp_src
      - get: terraform.d
        params:
          unpack: true
      - put: terraform
        params:
          <<: *ccp_default_params
          terraform_source: ccp_src/google/
          vars:
            instance_type: n1-standard-1
            PLATFORM: rocky8
      - task: gen_cluster
        file: ccp_src/ci/tasks/gen_cluster.yml
        params:
          <<: *ccp_gen_cluster_default_params
          PLATFORM: rocky8
      - task: gpinitsystem
        file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-cluster-env
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/setup-cluster-env.yml
  - task: run_tests
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/s3-plugin-tests.yml
    params:
      REGION: us-west-2
      AWS_ACCESS_KEY_ID: ((aws-bucket-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((aws-bucket-secret-access-key))
      BUCKET: ((dp/prod/gpbackup-s3-plugin-test-bucket))
  on_success:
    <<: *ccp_destroy
{% if should_alert and (is_prod or "gpbackup-release" == pipeline_name) %}
  on_failure:
    *slack_alert
{% endif %}
  ensure:
    <<: *set_failed

{% if is_prod and "gpbackup-release" != pipeline_name %}
- name: s3_plugin_perf
  plan:
  - in_parallel:
    - get: rocky8-gpdb6-image
    - get: gpbackup_s3_plugin
{% if is_prod or "gpbackup-release" == pipeline_name %}
      passed: [build_binaries_rhel6, build_binaries_rhel7, build_binaries_rhel8, build_binaries_ubuntu]
{% else %}
      passed: [build_binaries_rhel6, build_binaries_rhel7, build_binaries_rhel8]
{% endif %}
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_src
      resource: gpdb6_src
    - get: gpdb_binary
      resource: bin_gpdb_6x_rhel8
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - do:
      - get: ccp_src
      - get: terraform.d
        params:
          unpack: true
      - put: terraform
        params:
          <<: *ccp_default_params
          vars:
            PLATFORM: rocky8
            number_of_nodes: 4
            segments_per_host: 4
            instance_type: n1-standard-8
            ccp_reap_minutes: 360
      - task: gen_cluster
        file: ccp_src/ci/tasks/gen_cluster.yml
        params:
          <<: *ccp_gen_cluster_default_params
          PLATFORM: rocky8
      - task: gpinitsystem
        file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-cluster-env
    file: gpbackup/ci/tasks/setup-cluster-env.yml
    image: rocky8-gpdb6-image
  - task: run_perf
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/s3-plugin-perf.yml
    params:
      REGION: us-west-2
      AWS_ACCESS_KEY_ID: ((aws-bucket-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((aws-bucket-secret-access-key))
      BUCKET: ((dp/prod/gpbackup-s3-plugin-test-bucket))
      SCALE_FACTOR: 1
  on_success:
    <<: *ccp_destroy
{% if should_alert and (is_prod or "gpbackup-release" == pipeline_name) %}
  on_failure:
    *slack_alert
{% endif %}
  ensure:
    <<: *set_failed
{% endif %}

- name: gpbackup-manager-tests
  plan:
  - in_parallel:
    - get: rocky8-gpdb6-image
    - get: gpbackup_manager_src
{% if is_prod or "gpbackup-release" == pipeline_name %}
      passed: [build_binaries_rhel6, build_binaries_rhel7, build_binaries_rhel8, build_binaries_ubuntu]
{% else %}
      passed: [build_binaries_rhel6, build_binaries_rhel7, build_binaries_rhel8]
{% endif %}
    - get: gpdb_binary
      resource: bin_gpdb_6x_rhel8
{% if "gpbackup-release" != pipeline_name %}
      trigger: true
{% endif %}
    - get: gpbackup
      passed: [build_gppkgs]
    - get: ccp_src
    - get: bin_gpdb
      resource: bin_gpdb_6x_rhel8
    - get: gpdb_src
      resource: gpdb6_src
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google/
      vars:
        instance_type: n1-standard-1
        PLATFORM: rocky8
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: rocky8
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-cluster-env
    file: gpbackup/ci/tasks/setup-cluster-env.yml
    image: rocky8-gpdb6-image
  - task: run-tests-gpbackup-1.29.0
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/test-gpbackup-manager.yml
    params:
      GPBACKUP_VERSION: "1.29.0"
      OS: RHEL8
  - task: run-tests-gpbackup-latest
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/test-gpbackup-manager.yml
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed


{% if is_prod or "gpbackup-release" == pipeline_name %}
- name: ddboost_plugin_and_boostfs_tests_5x
  plan:
  - in_parallel:
    - get: gpdb_src
      resource: gpdb5_src
    - get: gpdb_binary
      resource: bin_gpdb_5x_centos7
    - get: centos7-gpdb6-image
    - get: gpbackup_ddboost_plugin
      passed: [build_gppkgs]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: boostfs_installer
    - get: ccp_src
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        instance_type: n1-standard-8
        PLATFORM: centos7
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos7
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-cluster-env
    file: gpbackup/ci/tasks/setup-cluster-env.yml
    image: centos7-gpdb6-image
    params:
      default_ami_user: centos
  - task: install-boostfs
    file: gpbackup/ci/tasks/boostfs-install.yml
    image: centos7-gpdb6-image
    params:
      default_ami_user: centos
      <<: *ddboost_params
  - task: run_tests
    image: centos7-gpdb6-image
    file: gpbackup/ci/tasks/ddboost-plugin-tests.yml
    params:
      <<: *ddboost_params
    on_success:
      <<: *ccp_destroy_nvme
  ensure:
    <<: *set_failed
{% endif %}

- name: ddboost_plugin_and_boostfs_tests_6x
  plan:
  - in_parallel:
    - get: gpdb_src
      resource: gpdb6_src
    - get: gpdb_binary
      resource: bin_gpdb_6x_rhel8
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_gpdb6
    - get: rocky8-gpdb6-image
    - get: gpbackup_ddboost_plugin
      passed: [build_gppkgs]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: boostfs_installer
    - get: ccp_src
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        instance_type: n1-standard-8
        PLATFORM: rocky8
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: rocky8
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-cluster-env
    file: gpbackup/ci/tasks/setup-cluster-env.yml
    image: rocky8-gpdb6-image
  - task: install-boostfs
    file: gpbackup/ci/tasks/boostfs-install.yml
    image: rocky8-gpdb6-image
    params:
      <<: *ddboost_params
  - task: run_tests
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/ddboost-plugin-tests.yml
    params:
      <<: *ddboost_params
    on_success:
      <<: *ccp_destroy_nvme
  ensure:
    <<: *set_failed

{% if is_prod and "gpbackup-release" != pipeline_name %}
- name: ddboost_plugin_perf
  plan:
  - in_parallel:
    - get: rocky8-gpdb6-image
    - get: gpbackup_ddboost_plugin
      passed: [build_gppkgs]
    - get: gpbackup
      passed: [build_gppkgs]
    - get: boostfs_installer
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb6_src
    - get: gpdb_binary
      resource: bin_gpdb_6x_rhel8
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        instance_type: n1-standard-8
        number_of_nodes: 4
        segments_per_host: 4
        PLATFORM: rocky8
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: rocky8
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-cluster-env
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/setup-cluster-env.yml
  - task: run_perf
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/ddboost-plugin-perf.yml
    params:
      <<: *ddboost_params
      REGION: us-west-2
      AWS_ACCESS_KEY_ID: ((aws-bucket-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((aws-bucket-secret-access-key))
      BUCKET: ((dp/prod/gpbackup-s3-plugin-test-bucket))
      SCALE_FACTOR: 1
    on_success:
      <<: *ccp_destroy_nvme
  ensure:
    <<: *set_failed
{% endif %}

- name: gpdb7
  plan:
  - in_parallel:
    - get: rocky9-gpdb7-image
    - get: rocky8-gpdb7-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb_7x_rhel9
    - get: bin_gpdb_7x_rhel8
      trigger: true
    - get: gpdb_src
      resource: gpdb_main_src
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_main
    - get: gp-pkg
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - task: run-tests-locally-rocky8
    image: rocky8-gpdb7-image
    file: gpbackup/ci/tasks/test-on-local-cluster.yml
    params:
      REQUIRES_DUMMY_SEC: true
      OS: RHEL8
    input_mapping:
      bin_gpdb: bin_gpdb_7x_rhel8
  - task: run-tests-locally-rocky9
    image: rocky9-gpdb7-image
    file: gpbackup/ci/tasks/test-on-local-cluster.yml
    params:
      REQUIRES_DUMMY_SEC: true
      OS: RHEL9
    input_mapping:
      bin_gpdb: bin_gpdb_7x_rhel9
{% if should_alert and (is_prod or "gpbackup-release" == pipeline_name) %}
  on_failure:
    *slack_alert
{% endif %}

- name: gpdb5
  plan:
  - in_parallel:
    - get: centos6-gpdb5-image
    - get: centos7-gpdb5-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb_5x_centos6
{% if "gpbackup-release" != pipeline_name %}
      trigger: true
{% endif %}
    - get: bin_gpdb_5x_centos7
    - get: gpdb_src
      resource: gpdb5_src
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - in_parallel:
    - task: run-tests-locally-centos6
      image: centos6-gpdb5-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      input_mapping:
        bin_gpdb: bin_gpdb_5x_centos6
      params:
          OS: RHEL6
    - task: run-tests-locally-centos7
      image: centos7-gpdb5-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      input_mapping:
        bin_gpdb: bin_gpdb_5x_centos7
      params:
          OS: RHEL7
{% if should_alert and (is_prod or "gpbackup-release" == pipeline_name) %}
  on_failure:
    *slack_alert
{% endif %}

- name: gpdb6
  plan:
  - in_parallel:
    - get: rocky9-gpdb6-image
    - get: rocky8-gpdb6-image
    - get: centos7-gpdb6-image
{% if is_prod or "gpbackup-release" == pipeline_name %}
    - get: ubuntu20.04-gpdb6-image
    - get: bin_gpdb_6x_ubuntu
{% endif %}
    - get: gpbackup
      passed: [build_gppkgs]
    - get: bin_gpdb_6x_rhel9
    - get: bin_gpdb_6x_rhel8
{% if "gpbackup-release" != pipeline_name %}
      trigger: true
{% endif %}
    - get: bin_gpdb_6x_centos7
    - get: gpdb_src
      resource: gpdb6_src
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_gpdb6
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - in_parallel:
    - task: run-tests-locally-centos7
      image: centos7-gpdb6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        OS: RHEL7
      input_mapping:
        bin_gpdb: bin_gpdb_6x_centos7
    - task: run-tests-locally-rocky8
      image: rocky8-gpdb6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        OS: RHEL8
      input_mapping:
        bin_gpdb: bin_gpdb_6x_rhel8
    - task: run-tests-locally-rocky9
      image: rocky9-gpdb6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        OS: RHEL9
      input_mapping:
        bin_gpdb: bin_gpdb_6x_rhel9
{% if is_prod or "gpbackup-release" == pipeline_name %}
    - task: run-tests-locally-ubuntu20.04
      image: ubuntu20.04-gpdb6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        OS: ubuntu
      input_mapping:
        bin_gpdb: bin_gpdb_6x_ubuntu
{% if should_alert %}
  on_failure:
    *slack_alert
{% endif %}
{% endif %}

- name: gpdb6-7-seg-cluster
  plan:
  - in_parallel:
    - get: rocky9-gpdb6-image
    - get: rocky8-gpdb6-image
    - get: centos7-gpdb6-image
{% if is_prod or "gpbackup-release" == pipeline_name %}
    - get: ubuntu20.04-gpdb6-image
    - get: bin_gpdb_6x_ubuntu
{% endif %}
    - get: gpbackup
      passed: [build_gppkgs]
{% if "gpbackup-release" != pipeline_name %}
      trigger: true
{% endif %}
    - get: bin_gpdb_6x_rhel9
    - get: bin_gpdb_6x_rhel8
    - get: bin_gpdb_6x_centos7
    - get: gpdb_src
      resource: gpdb6_src
    - get: dummy_seclabel
      resource: dummy_seclabel_linux_gpdb6
    - get: gppkgs
      trigger: true
      passed: [build_gppkgs]
  - in_parallel:
    - task: run-tests-locally-centos7
      image: centos7-gpdb6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        LOCAL_CLUSTER_SIZE: 7
        OS: RHEL7
      input_mapping:
        bin_gpdb: bin_gpdb_6x_centos7
    - task: run-tests-locally-rocky8
      image: rocky8-gpdb6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        LOCAL_CLUSTER_SIZE: 7
        OS: RHEL8
      input_mapping:
        bin_gpdb: bin_gpdb_6x_rhel8
    - task: run-tests-locally-rocky9
      image: rocky9-gpdb6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        LOCAL_CLUSTER_SIZE: 7
        OS: RHEL9
      input_mapping:
        bin_gpdb: bin_gpdb_6x_rhel9
{% if is_prod or "gpbackup-release" == pipeline_name %}
    - task: run-tests-locally-ubuntu20.04
      image: ubuntu20.04-gpdb6-image
      file: gpbackup/ci/tasks/test-on-local-cluster.yml
      params:
        REQUIRES_DUMMY_SEC: true
        LOCAL_CLUSTER_SIZE: 7
        OS: ubuntu
      input_mapping:
        bin_gpdb: bin_gpdb_6x_ubuntu
{% if should_alert %}
  on_failure:
    *slack_alert
{% endif %}
{% endif %}

- name: backward-compatibility
  plan:
  - in_parallel:
    - get: centos7-gpdb6-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_5x_centos7
{% if "gpbackup-release" != pipeline_name %}
      trigger: true
{% endif %}
    - get: bin_gpbackup_1.0.0_and_1.7.1
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb5_src
    - get: gppkgs
      passed: [build_gppkgs]
      trigger: true
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/google/
      vars:
        instance_type: n1-standard-1
        PLATFORM: centos7
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos7
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-cluster-env
    file: gpbackup/ci/tasks/setup-cluster-env.yml
    image: centos7-gpdb6-image
    params:
      default_ami_user: centos
  - task: backup-1.0.0-restore-latest
    image: centos7-gpdb6-image
    file: gpbackup/ci/tasks/all-tests.yml
    params:
      GPBACKUP_VERSION: "1.0.0"
      OS: RHEL7
  - task: backup-1.7.1-restore-latest
    image: centos7-gpdb6-image
    file: gpbackup/ci/tasks/all-tests.yml
    params:
      GPBACKUP_VERSION: "1.7.1"
      OS: RHEL7
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

{% if is_prod and "gpbackup-release" != pipeline_name %}
- name: scale-gpdb7
  plan:
  - in_parallel:
    - get: rocky8-gpdb7-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_7x_rhel8
    - get: ccp_src
    - get: gp-pkg
    - get: gpdb_src
      resource: gpdb_main_src
    - get: scale_schema
{% if nightly_trigger %}
    - get: nightly-trigger
      trigger: true
{% endif %}
    - get: gppkgs
      passed: [build_gppkgs]
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        instance_type: n1-standard-8
        PLATFORM: rocky8-gpdb7
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: rocky8-gpdb7
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-cluster-env
    image: rocky8-gpdb7-image
    file: gpbackup/ci/tasks/setup-cluster-env.yml
  - task: scale-tests
    image: rocky8-gpdb7-image
    file: gpbackup/ci/tasks/scale-tests.yml
    params:
      OS: RHEL8
  on_success:
    <<: *ccp_destroy_nvme
{% if should_alert %}
  on_failure:
    *slack_alert
{% endif %}
  ensure:
    <<: *set_failed

- name: scale-6x
  plan:
  - in_parallel:
    - get: rocky8-gpdb6-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_6x_rhel8
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb6_src
    - get: scale_schema
{% if nightly_trigger and "gpbackup-release" != pipeline_name %}
    - get: nightly-trigger
      trigger: true
{% endif %}
    - get: gppkgs
      passed: [build_gppkgs]
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        instance_type: n1-standard-8
        PLATFORM: rocky8
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: rocky8
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-cluster-env
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/setup-cluster-env.yml
  - task: scale-tests
    image: rocky8-gpdb6-image
    file: gpbackup/ci/tasks/scale-tests.yml
    params:
      OS: RHEL7
  on_success:
    <<: *ccp_destroy_nvme
{% if should_alert %}
  on_failure:
    *slack_alert
{% endif %}
  ensure:
    <<: *set_failed

- name: scale-5x
  plan:
  - in_parallel:
    - get: centos7-gpdb6-image
    - get: gpbackup
      passed: [build_gppkgs]
    - get: gpdb_binary
      resource: bin_gpdb_5x_centos7
    - get: ccp_src
    - get: gpdb_src
      resource: gpdb5_src
    - get: scale_schema
{% if nightly_trigger and "gpbackup-release" != pipeline_name %}
    - get: nightly-trigger
      trigger: true
{% endif %}
    - get: gppkgs
      passed: [build_gppkgs]
    - get: terraform.d
      params:
        unpack: true
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        instance_type: n1-standard-8
        PLATFORM: centos7
  - task: gen_cluster
    params:
      <<: *ccp_gen_cluster_default_params
      PLATFORM: centos7
    file: ccp_src/ci/tasks/gen_cluster.yml
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-cluster-env
    image: centos7-gpdb6-image
    file: gpbackup/ci/tasks/setup-cluster-env.yml
    params:
      default_ami_user: centos
  - task: scale-tests
    image: centos7-gpdb6-image
    file: gpbackup/ci/tasks/scale-tests.yml
    params:
      OS: RHEL7
  on_success:
    <<: *ccp_destroy_nvme
{% if should_alert %}
  on_failure:
    *slack_alert
{% endif %}
  ensure:
    <<: *set_failed
{% endif %}

{% if "gpbackup-release" == pipeline_name %}
- name: green_gate
  plan:
  - in_parallel:
    - get: gppkgs
      trigger: true
      passed:
        - build_gppkgs
        - gpdb5
        - gpdb6
        - s3_plugin_tests
        - backward-compatibility
        - ddboost_plugin_and_boostfs_tests_5x
        - ddboost_plugin_and_boostfs_tests_6x
        - gpbackup-manager-tests
    - get: gpbackup
      passed: [build_gppkgs]
  - put: gppkgs_release_versioned
    params:
      file: gppkgs/gpbackup-gppkgs.tar.gz

- name: push-to-github
  plan:
  - get: rocky8-gpdb7-image
  - get: release_components_rhel6
    passed: [build_gppkgs]
  - get: release_components_rhel7
    passed: [build_gppkgs]
  - get: release_components_rhel8
    passed: [build_gppkgs]
  - get: release_components_rhel9
    passed: [ build_gppkgs ]
  - get: release_components_ubuntu
    passed: [build_gppkgs]
  - get: gpbackup
    passed: [green_gate]
  - task: prepare-for-release
    image: rocky8-gpdb7-image
    file: gpbackup/ci/tasks/prepare_release.yml
  - put: gpbackup_github_release
    params:
      name: components_untarred_rhel8/gpbackup_version
      tag: components_untarred_rhel8/gpbackup_version
      globs:
      - components_untarred_rhel6/output/gpbackup_binaries_rhel6.tar.gz
      - components_untarred_rhel7/output/gpbackup_binaries_rhel7.tar.gz
      - components_untarred_rhel8/output/gpbackup_binaries_rhel8.tar.gz
      - components_untarred_rhel8/output/gpbackup_binaries_rhel9.tar.gz
      - components_untarred_ubuntu/output/gpbackup_binaries_ubuntu.tar.gz


- name: push-to-pivnet
  plan:
    - in_parallel:
      - get: gppkgs
        resource: gppkgs_release_versioned
        passed: [green_gate]
      - get: release_components_rhel6
        passed: [build_gppkgs]
      - get: release_components_rhel7
        passed: [build_gppkgs]
      - get: release_components_rhel8
        passed: [build_gppkgs]
      - get: release_components_rhel9
        passed: [ build_gppkgs ]
      - get: release_components_ubuntu
        passed: [build_gppkgs]
      - get: gpbackup
        passed: [green_gate]
      - get: gpbackup-release-license
      - get: pivnet_release_cache
      - get: rocky8-gpdb7-image
      - get: tanzunet_client
    - task: update_metadata.yml
      image: rocky8-gpdb7-image
      file: gpbackup/ci/tasks/update-metadata.yml
      params:
        TANZUNET_REFRESH_TOKEN: ((releng/tanzunet-refresh-token))
    - put: pivnet_release_cache
      params:
        file: workspace/v-*
    - in_parallel:
      - put: final_published_file_gppkg_gp7_rhel9
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-gp7-rhel9-x86_64.gppkg
      - put: final_published_file_gppkg_gp7_rhel8
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-gp7-rhel8-x86_64.gppkg
      - put: final_published_file_gppkg_gp6_rhel9
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-gp6-rhel9-x86_64.gppkg
      - put: final_published_file_gppkg_gp6_rhel8
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-gp6-rhel8-x86_64.gppkg
      - put: final_published_file_gppkg_gp6_rhel7
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-gp6-rhel7-x86_64.gppkg
      - put: final_published_file_gppkg_gp6_rhel6
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-gp6-rhel6-x86_64.gppkg
      - put: final_published_file_gppkg_gp6_ubuntu
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-gp6-ubuntu-amd64.gppkg
      - put: final_published_file_gppkg_gp5_rhel7
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-gp5-rhel7-x86_64.gppkg
      - put: final_published_file_gppkg_gp5_rhel6
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-gp5-rhel6-x86_64.gppkg
      - put: final_published_file_tar_rhel9
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-rhel9.tar.gz
      - put: final_published_file_tar_rhel8
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-rhel8.tar.gz
      - put: final_published_file_tar_rhel7
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-rhel7.tar.gz
      - put: final_published_file_tar_rhel6
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-rhel6.tar.gz
      - put: final_published_file_tar_ubuntu
        params:
          file: workspace/files-to-upload/greenplum_backup_restore-*-ubuntu.tar.gz
{% endif %}

{% if "gpbackup-release" != pipeline_name %}
- name: final_gate
  plan:
  - in_parallel:
    - get: gppkgs
      trigger: true
      passed:
        - build_gppkgs
        - gpdb5
        - gpdb6
        - gpdb7
        - s3_plugin_tests
        - backward-compatibility
{% if is_prod %}
        - ddboost_plugin_and_boostfs_tests_5x
{% endif %}
        - ddboost_plugin_and_boostfs_tests_6x
        - gpbackup-manager-tests
{% endif %}
